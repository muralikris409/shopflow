{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/orders/page.js"],"sourcesContent":["// \"use client\";\n// import React, { useState, useEffect } from 'react';\n// import { getOrderByUserId, cancelOrder } from '../service/OrderService';\n// import { useSelector } from 'react-redux';\n// import withAuth from '../_routeprotector/WithAuth';\n// const OrderTile = ({ order, onCancel }) => {\n//   const handleCancel = () => {\n//     onCancel(order.id);\n//   };\n//  console.log(order);\n//   return (\n//     <section className=\"bg-white py-5 text-gray-700 sm:py-5 lg:py-5  overflow-y-hidden\">\n//       <div className=\"mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-4\">\n//         <div className=\"mx-auto max-w-md text-center mb-4\">\n//           <h2 className=\"font-serif text-2xl font-bold sm:text-3xl\">\n//             Order ID <span className=\"text-gray-500\"># {order.id}</span>\n//           </h2>\n//         </div>\n\n//         <div className=\"mt-10 grid grid-cols-1 gap-6 lg:grid-cols-1 lg:gap-4\">\n//           <article className=\"relative p-4 border rounded-lg shadow-md bg-white\">\n//             <div className=\"flex justify-between items-center mb-4\">\n//               <h3 className=\"text-lg font-bold\">Order Status</h3>\n//               <div className=\"flex items-center space-x-2\">\n//                 <p className={`text-sm ${order.orderStatus === 'OnDeliver' ? 'text-green-500' : 'text-red-500'}`}>\n//                   {order.orderStatus}\n//                 </p>\n             \n//               </div>\n              \n//             </div>\n           \n//             <div className=\"flex justify-between items-center mb-2\">\n//             {order.orderStatus !== 'CANCELLED' && (\n//                   <button\n//                     className=\"px-4 py-1 bg-red-500 text-white rounded hover:bg-red-700 transition-colors duration-200\"\n//                     onClick={handleCancel}\n//                   >\n//                     Cancel\n//                   </button>\n//                 )}\n//               {/* <p className=\"text-sm text-gray-500\">Estimated arrival: {order.estimatedArrival}</p> */}\n//             </div>\n//             <div className=\"flex items-center space-x-4 mt-4 overflow-x-auto scroll-smooth\">\n//               {order.items.map((item) => (\n//                 <div key={item.id} className=\"flex flex-col items-center min-w-[200px]\">\n//                   <div className=\"aspect-square w-full overflow-hidden\">\n//                     <img\n//                       src={item.product.image || \"/_assets/image.png\"}\n//                       alt={item.product.name}\n//                       className=\"group-hover:scale-110 h-full w-full object-cover transition-all duration-300 rounded-md\"\n//                     />\n//                   </div>\n//                   <p className=\"text-sm font-semibold text-center mt-2\">{item.product.name}</p>\n//                   <p className=\"text-sm text-center\">\n//                     $ {item.price.toLocaleString()} x {item.quantity}\n//                   </p>\n//                 </div>\n//               ))}\n//             </div>\n\n//             <p className=\"mt-4 font-bold text-lg\">Total: $ {order.totalAmount.toLocaleString()}</p>\n//             {order.orderStatus === 'Cancelled' && (\n//               <p className=\"mt-2 text-red-500 font-semibold\">Order Cancelled</p>\n//             )}\n//           </article>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// const OrderPage = () => {\n//   const [orders, setOrders] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const userId = useSelector((state) => state.session.user?.id);\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       if (!userId) return; \n//       try {\n//         setLoading(true);\n//         const data = await getOrderByUserId(userId);\n//         setOrders(data.orders || []); \n//       } catch (err) {\n//         setError(err?.message || \"An error occurred\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchOrders();\n//   }, [userId]);\n\n//   const handleCancelOrder = async (orderId) => {\n//     try {\n//     //   setLoading(true);\n//       await cancelOrder(orderId);\n//       setOrders((prevOrders) =>\n//         prevOrders.map((order) =>\n//           order.id === orderId ? { ...order, orderStatus: 'Cancelled' } : order\n//         )\n//       );\n//     } catch (err) {\n//       setError(err?.message || \"Failed to cancel order\");\n//     } finally {\n//     //   setLoading(false);\n//     }\n//   };\n\n//   if (loading) {\n//     return <div className=\"text-center text-lg\">Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"text-red-500 text-center text-lg\">Error: {error}</div>;\n//   }\n\n//   return (\n//     <>\n//     <h1 className=\"text-3xl font-bold mb-6 text-center\">My Orders</h1>\n\n//     <div className=\"container mx-auto p-4 max-h-lvh overflow-y-scroll my-10\">\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4\">\n//         {orders.map((order) => (\n//           <OrderTile key={order.id} order={order} onCancel={handleCancelOrder} />\n//         ))}\n//       </div>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default withAuth(OrderPage);\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,sDAAsD;AACtD,2EAA2E;AAC3E,6CAA6C;AAC7C,sDAAsD;AACtD,+CAA+C;AAC/C,iCAAiC;AACjC,0BAA0B;AAC1B,OAAO;AACP,uBAAuB;AACvB,aAAa;AACb,2FAA2F;AAC3F,uEAAuE;AACvE,8DAA8D;AAC9D,uEAAuE;AACvE,2EAA2E;AAC3E,kBAAkB;AAClB,iBAAiB;AAEjB,iFAAiF;AACjF,oFAAoF;AACpF,uEAAuE;AACvE,oEAAoE;AACpE,8DAA8D;AAC9D,qHAAqH;AACrH,wCAAwC;AACxC,uBAAuB;AAEvB,uBAAuB;AAEvB,qBAAqB;AAErB,uEAAuE;AACvE,sDAAsD;AACtD,4BAA4B;AAC5B,0HAA0H;AAC1H,6CAA6C;AAC7C,sBAAsB;AACtB,6BAA6B;AAC7B,8BAA8B;AAC9B,qBAAqB;AACrB,6GAA6G;AAC7G,qBAAqB;AACrB,+FAA+F;AAC/F,6CAA6C;AAC7C,2FAA2F;AAC3F,2EAA2E;AAC3E,2BAA2B;AAC3B,yEAAyE;AACzE,gDAAgD;AAChD,4HAA4H;AAC5H,yBAAyB;AACzB,2BAA2B;AAC3B,kGAAkG;AAClG,wDAAwD;AACxD,wEAAwE;AACxE,yBAAyB;AACzB,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AAErB,sGAAsG;AACtG,sDAAsD;AACtD,mFAAmF;AACnF,iBAAiB;AACjB,uBAAuB;AACvB,iBAAiB;AACjB,eAAe;AACf,iBAAiB;AACjB,OAAO;AACP,KAAK;AAEL,4BAA4B;AAC5B,8CAA8C;AAC9C,kDAAkD;AAClD,8CAA8C;AAC9C,mEAAmE;AAEnE,sBAAsB;AACtB,wCAAwC;AACxC,8BAA8B;AAC9B,cAAc;AACd,4BAA4B;AAC5B,uDAAuD;AACvD,yCAAyC;AACzC,wBAAwB;AACxB,yDAAyD;AACzD,oBAAoB;AACpB,6BAA6B;AAC7B,UAAU;AACV,SAAS;AAET,qBAAqB;AACrB,kBAAkB;AAElB,mDAAmD;AACnD,YAAY;AACZ,6BAA6B;AAC7B,oCAAoC;AACpC,kCAAkC;AAClC,oCAAoC;AACpC,kFAAkF;AAClF,YAAY;AACZ,WAAW;AACX,sBAAsB;AACtB,4DAA4D;AAC5D,kBAAkB;AAClB,8BAA8B;AAC9B,QAAQ;AACR,OAAO;AAEP,mBAAmB;AACnB,oEAAoE;AACpE,MAAM;AAEN,iBAAiB;AACjB,qFAAqF;AACrF,MAAM;AAEN,aAAa;AACb,SAAS;AACT,yEAAyE;AAEzE,gFAAgF;AAChF,yEAAyE;AACzE,mCAAmC;AACnC,oFAAoF;AACpF,cAAc;AACd,eAAe;AACf,aAAa;AACb,UAAU;AACV,OAAO;AACP,KAAK;AAEL,sCAAsC"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AA5B5B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAQtB,8BAA8B;IAK5BM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;wBAAAA,CAAY,OAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACZC,UAAU;;iBACVC,UAAU,EAAE;kBACd,QAAA,CAAA;YAAA;SAAA;;KACAC,UAAU;cACRC,IAAAA;YAAAA,GAAYnB,GAAAA;gBACd,OAAA,QAAA;wBAAA;4BACA,KAAA,CAAA,GAAA,2KAAA,CAAA,sBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,cAAA,CAAA,CAAA,EAAA,2SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA","ignoreList":[0]}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}