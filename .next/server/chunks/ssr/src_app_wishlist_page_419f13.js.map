{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/wishlist/page.js"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { loadWishlist, removeProductFromWishlist } from '../service/WishlistService';\nimport { useSelector } from 'react-redux';\n\nconst Wishlist = () => {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const userId = useSelector((state) => state.session.user?.id);\n  const token = useSelector((state) => state.session.token);\n\n \n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n  useEffect(() => {\n    const fetchWishlist = async () => {\n      try {\n        if (userId) {\n          const wishlistProducts = await loadWishlist(userId);\n          setProducts(wishlistProducts);\n        }\n      } catch (err) {\n        setError('Failed to load wishlist. Please try again later.');\n      }\n    };\n\n    fetchWishlist();\n  }, [userId]);\n\n  const handleRemoveProduct = async (productId) => {\n    try {\n      if (userId) {\n        await removeProductFromWishlist(userId, productId);\n        setProducts(products.filter((product) => product.productId !== productId));\n      }\n    } catch (err) {\n      setError('Failed to remove product from wishlist. Please try again later.');\n    }\n  };\n\n  return (\n    <section className=\"h-1/3 bg-gray-100 py-12 sm:py-16 lg:py-20\">\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-center\">\n          {\n            (products.length > 0) ?\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Your Wishlist</h1> :\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Your Wishlist is empty</h1>\n          }\n        </div>\n\n        {error && (\n          <div className=\"text-center text-red-500 mt-4\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"mx-auto mt-8 max-w-2xl md:mt-12\">\n          <div className=\"bg-white shadow\">\n            <div className=\"px-4 py-6 sm:px-8 sm:py-10\">\n              <div className=\"flow-root\">\n                <ul className=\"-my-8\">\n                  {products.map((product, index) => (\n                    <WishlistTile\n                      key={index}\n                      product={product}\n                      onRemoveProduct={handleRemoveProduct}\n                    />\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Wishlist;\n\nfunction WishlistTile({ product, onRemoveProduct }) {\n  return (\n    <li className=\"flex flex-col space-y-3 py-6 text-left sm:flex-row sm:space-x-5 sm:space-y-0\">\n      <div className=\"shrink-0\">\n        <img className=\"h-24 w-24 max-w-full rounded-lg object-cover\" src={product.image} alt={product.name} />\n      </div>\n\n      <div className=\"relative flex flex-1 flex-col justify-between\">\n        <div className=\"sm:col-gap-5 sm:grid sm:grid-cols-2\">\n          <div className=\"pr-8 sm:pr-5\">\n            <p className=\"text-base font-semibold text-gray-900\">{product.name}</p>\n          </div>\n        </div>\n\n        <div className=\"absolute top-0 right-0 flex sm:bottom-0 sm:top-auto\">\n          <button\n            onClick={() => onRemoveProduct(product.productId)}\n            type=\"button\"\n            className=\"flex rounded p-2 text-center text-gray-500 transition-all duration-200 ease-in-out focus:shadow hover:text-gray-900\"\n          >\n            <svg\n              className=\"h-5 w-5\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;;;;;;AAEA;AAJA;;;;;AAMA,MAAM,WAAW;IACf,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI,EAAE;IAC1D,MAAM,QAAQ,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,KAAK;IAIxD,MAAM,aAAa,IAAM,CAAC;YACxB,eAAe,CAAC,OAAO,EAAE,OAAO;YAChC,gBAAgB;QAClB,CAAC;IACD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,IAAI;gBACF,IAAI,QAAQ;oBACV,MAAM,mBAAmB,MAAM,aAAa;oBAC5C,YAAY;gBACd;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS;YACX;QACF;QAEA;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,sBAAsB,OAAO;QACjC,IAAI;YACF,IAAI,QAAQ;gBACV,MAAM,0BAA0B,QAAQ;gBACxC,YAAY,SAAS,MAAM,CAAC,CAAC,UAAY,QAAQ,SAAS,KAAK;YACjE;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BAEX,AAAC,SAAS,MAAM,GAAG,kBACnB,8OAAC;wBAAG,WAAU;kCAAuC;;;;;6CACrD,8OAAC;wBAAG,WAAU;kCAAuC;;;;;;;;;;;gBAIxD,uBACC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;8BAIL,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAG,WAAU;8CACX,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,8OAAC;4CAEC,SAAS;4CACT,iBAAiB;2CAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAa3B;uCAEe;AAEf,SAAS,aAAa,EAAE,OAAO,EAAE,eAAe,EAAE;IAChD,qBACE,8OAAC;QAAG,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;oBAA+C,KAAK,QAAQ,KAAK;oBAAE,KAAK,QAAQ,IAAI;;;;;;;;;;;0BAGrG,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAyC,QAAQ,IAAI;;;;;;;;;;;;;;;;kCAItE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,SAAS,IAAM,gBAAgB,QAAQ,SAAS;4BAChD,MAAK;4BACL,WAAU;sCAEV,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAM;gCACN,MAAK;gCACL,SAAQ;gCACR,QAAO;0CAEP,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnF"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}