{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/PaymentService.js"],"sourcesContent":["import { axiosInstance } from \"../api/axios\";\n\nexport const createOrder = async (userId, items) => {\n  try {\n    const response = await axiosInstance.post(\"user/order/createOrder\", {\n      userId,\n      items,\n    });\n    console.log(response);\n\n    if (response.status !== 201) {\n      throw new Error(\"Error creating order\");\n    }\n\n    return response.data; // Return the response data directly\n  } catch (error) {\n    console.error(\"Error in createOrder:\", error);\n    throw error;\n  }\n};\n\nexport const verifyPayment = async (orderId,razorpayId, paymentId, paymentSignature) => {\n    console.log(orderId);\n    console.log(paymentId);\n    console.log(paymentSignature)\n  try {\n    const response = await axiosInstance.post(\"user/order/verify\", {\n    },\n    {\n        params:{\n            razorpayId,\n            orderId,\n            paymentId,\n            paymentSignature,\n        }\n    }\n\n);\n\n  \n\n    return response.data; \n  } catch (error) {\n    console.error(\"Error in verifyPayment:\", error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,cAAc,OAAO,QAAQ;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,0BAA0B;YAClE;YACA;QACF;QACA,QAAQ,GAAG,CAAC;QAEZ,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI,EAAE,oCAAoC;IAC5D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,MAAM,gBAAgB,OAAO,SAAQ,YAAY,WAAW;IAC/D,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACd,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,qBAAqB,CAC/D,GACA;YACI,QAAO;gBACH;gBACA;gBACA;gBACA;YACJ;QACJ;QAMA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/OrderService.js"],"sourcesContent":["import {axiosInstance} from '../api/axios';\n\nexport const createOrder = async (userId, items) => {\n  try {\n    const response = await axiosInstance.post('/user/order/createOrder', { userId, items });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw new Error(error?.response?.data?.message || 'Error creating order.');\n  }\n};\n\nexport const verifyPaymentAndUpdateOrder = async (orderId,razorpayId, paymentId, paymentSignature) => {\n    console.log(\"order_id:\",orderId);\n    console.log(\"razorpayId:\",razorpayId);\n    console.log(\"paymentId:\",paymentId);\n    console.log(\"siign:\",paymentSignature);\n  try {\n    const response = await axiosInstance.post('/user/order/verify', {}\n    ,\n    {\n        params:{\n            orderId,\n            razorpayId,\n            paymentId,\n            paymentSignature,\n        }\n    }\n    \n);\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying payment:', error);\n    throw new Error(error?.response?.data?.message || 'Error verifying payment.');\n  }\n};\n\nexport const checkOutOrder = async (orderId) => {\n    console.log(\"orderid:\",orderId)\n  try { \n    const response = await axiosInstance.post(`/user/order/checkoutOrder?orderId=${orderId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user orders:', error);\n    throw new Error(error?.response?.data?.message || 'Error fetching user orders.');\n  }\n};\nexport const getOrderByUserId = async (userId) => {\n    console.log(\"userId:\", userId);\n    try {\n      const response = await axiosInstance.get(`/user/order/getUserOrder?userId=${userId}`\n       \n      );\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user orders:', error);\n      throw new Error(error?.response?.data?.message || 'Error fetching user orders.');\n    }\n  };\nexport const cancelOrder = async (orderId) => {\n    console.log(orderId);\n  try {\n    const response = await axiosInstance.put(`/user/order/${orderId}/cancel?orderId=${orderId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error cancelling order:', error);\n    throw new Error(error?.response?.data?.message || 'Error cancelling order.');\n  }\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEO,MAAM,cAAc,OAAO,QAAQ;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,2BAA2B;YAAE;YAAQ;QAAM;QACrF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,WAAW;IACpD;AACF;AAEO,MAAM,8BAA8B,OAAO,SAAQ,YAAY,WAAW;IAC7E,QAAQ,GAAG,CAAC,aAAY;IACxB,QAAQ,GAAG,CAAC,eAAc;IAC1B,QAAQ,GAAG,CAAC,cAAa;IACzB,QAAQ,GAAG,CAAC,UAAS;IACvB,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAEjE;YACI,QAAO;gBACH;gBACA;gBACA;gBACA;YACJ;QACJ;QAGA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,WAAW;IACpD;AACF;AAEO,MAAM,gBAAgB,OAAO;IAChC,QAAQ,GAAG,CAAC,YAAW;IACzB,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,kCAAkC,EAAE,SAAS;QACxF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,WAAW;IACpD;AACF;AACO,MAAM,mBAAmB,OAAO;IACnC,QAAQ,GAAG,CAAC,WAAW;IACvB,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,gCAAgC,EAAE,QAAQ;QAGpF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,WAAW;IACpD;AACF;AACK,MAAM,cAAc,OAAO;IAC9B,QAAQ,GAAG,CAAC;IACd,IAAI;QACF,MAAM,WAAW,MAAM,0HAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,QAAQ,gBAAgB,EAAE,SAAS;QAC3F,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,WAAW;IACpD;AACF"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/Checkout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createOrder, verifyPayment } from '../service/PaymentService';  \nimport { checkOutOrder, getOrderById, verifyPaymentAndUpdateOrder } from '../service/OrderService';\nimport { useRouter } from 'next/navigation';\n// const OrderSummary = ({ \n//   title, \n//   steps, \n//   userId,\n//   orders,\n//   shippingMethods, \n//   billingAddress,\n//   totalBill \n// }) => {\n//     console.log(orders?.orders.id);\n//    const router=useRouter();\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders.orders.items);\n//   console.log(\"orderData:\", orders);\n\n//   useEffect(() => {\n//     const script = document.createElement('script');\n//     script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n//     script.onload = () => {\n//       // Now you can use Razorpay when the script is fully loaded\n//     };\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script); // Cleanup script when component unmounts\n//     };\n//   }, [userId]);\n\n//   const handleVerify = async (orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n//     console.log(razorpay_order_id, razorpay_payment_id, razorpay_signature)\n//     try {\n//       const response = await verifyPaymentAndUpdateOrder(orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n//       return response;\n//       // Handle successful verification (e.g., redirect to confirmation page)\n//     } catch (err) {\n//       setError('Payment verification failed. Please try again.');\n//       console.error(err);\n//     }\n//   };\n\n//   const handlePayment = async () => {\n//     setLoading(true);\n//     setError(null); // Reset error state before starting payment\n//     try {\n//       const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id||orders?.orders.id);\n//       console.log(razorpayOrder);\n//       const options = {\n//         key: 'rzp_test_nTbKdtgjeOQLhc', // Replace with your Razorpay Key\n//         amount: Math.ceil(totalBill * 100), // Amount in paise (multiply by 100)\n//         currency: razorpayOrder?.currency,\n//         name: 'Your Shop',\n//         description: 'Payment for your order',\n//         order_id: razorpayOrder?.id,\n//         handler: async function (response) {\n//           console.log(response);\n//           const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n\n//           // Step 3: Verify the payment\n//           const verificationResult = await verifyPayment(orders?.orders?.order?.id||orders?.orders.id,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n    \n//           if (verificationResult.success) {\n//             const res=await handleVerify(orders?.orders?.order?.id||orders?.orders.id,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n//             router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(res?.order))}`);\n//           } else {\n//             setError('Payment verification failed. Please try again.');\n//           }\n//         },\n//         prefill: {\n//           name: 'Customer Name',\n//           email: 'customer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: {\n//           color: '#F37254',\n//         },\n//       };\n\n//       // Step 4: Instantiate Razorpay after script load\n//       const rzp = new window.Razorpay(options); // Use `window.Razorpay` since it's globally available after script load\n//       rzp.open();\n      \n//     } catch (err) {\n//       setError('Payment process failed. Please try again.');\n//       console.error('Payment process failed:', err);\n//     } finally {\n//       setLoading(false); // Ensure loading state is reset\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Error Message */}\n//       {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n\n//       {/* Order summary and steps layout */}\n//       <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n//         <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n//         <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n//           <div className=\"relative\">\n//             <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n//               {steps.map((step, index) => (\n//                 <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n//                   <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n//                     {step.icon ? (\n//                       <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n//                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n//                       </svg>\n//                     ) : step.number}\n//                   </a>\n//                   <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Order items and total */}\n//       <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n//         <div className=\"px-4 pt-8\">\n//           <p className=\"text-xl font-medium\">Order Summary</p>\n//           <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n//           {/* Order items display */}\n//           <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n//             {orderData?.map((orderItem, index) => (\n//               <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n//                 <img\n//                   className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\"\n//                   src={orderItem.product?.image || \"/_assets/image.png\"}\n//                   alt={orderItem.product?.name || \"Product Image\"}\n//                 />\n//                 <div className=\"flex w-full flex-col px-4 py-4\">\n//                   <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n//                   <span className=\"float-right text-gray-400\">\n//                     {orderItem.product?.description || \"No description available.\"}\n//                   </span>\n//                   <span className=\"float-right text-gray-400\">\n//                     {\"Quantity: \" + (orderItem.quantity || 1)}\n//                   </span>\n//                   <p className=\"text-lg font-bold\">\n//                     {\"$\" + (orderItem.product?.offerPrice || \"0.00\")}\n//                   </p>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n          \n//           <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n//           {/* Shipping Methods */}\n//           <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n//           <form className=\"mt-5 grid gap-6\">\n//             {shippingMethods.map((method, index) => (\n//               <div key={index} className=\"relative\">\n//                 <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n//                 <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n//                 <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n//                   <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n//                   <div className=\"ml-5\">\n//                     <span className=\"mt-2 font-semibold\">{method.name}</span>\n//                     <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n//                   </div>\n//                 </label>\n//               </div>\n//             ))}\n//           </form>\n//         </div>\n\n//         {/* Billing Address */}\n//         <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n//           <p className=\"text-xl font-medium\">Address Details</p>\n//           <p className=\"text-gray-400\">Complete your order by providing your delivery address.</p>\n//           {/* Billing Address Form */}\n//           <div>\n//             <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n//             <input type=\"text\" id=\"full-name\" name=\"full-name\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" />\n//             <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n//             <input type=\"text\" id=\"street-address\" name=\"street-address\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" />\n//             <div className=\"flex mt-4\">\n//               <div className=\"w-1/2 pr-2\">\n//                 <label htmlFor=\"city\" className=\"mb-2 block text-sm font-medium\">City</label>\n//                 <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"City\" />\n//               </div>\n//               <div className=\"w-1/2 pl-2\">\n//                 <label htmlFor=\"state\" className=\"mb-2 block text-sm font-medium\">State</label>\n//                 <select name=\"state\" id=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n//                   <option value=\"State\">Select State</option>\n//                   {billingAddress.states.map((state, index) => (\n//                     <option key={index} value={state}>{state}</option>\n//                   ))}\n//                 </select>\n//               </div>\n//             </div>\n\n//             <div className=\"flex mt-4\">\n//               <div className=\"w-1/2 pr-2\">\n//                 <label htmlFor=\"zip\" className=\"mb-2 block text-sm font-medium\">ZIP Code</label>\n//                 <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"ZIP Code\" />\n//               </div>\n//               <div className=\"w-1/2 pl-2\">\n//                 <label htmlFor=\"country\" className=\"mb-2 block text-sm font-medium\">Country</label>\n//                 <select name=\"country\" id=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n//                   <option value=\"Country\">Select Country</option>\n//                   {billingAddress.countries.map((country, index) => (\n//                     <option key={index} value={country}>{country}</option>\n//                   ))}\n//                 </select>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Payment Button */}\n//       <div className=\"py-5 sm:px-6\">\n//         <button onClick={handlePayment} className=\"w-full rounded-md bg-green-500 text-white py-3 text-xl hover:bg-green-700\">\n//           {loading ? 'Processing Payment...' : 'Pay Now'}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderSummary;\n\n\nconst OrderSummary = ({ \n  title, \n  steps, \n  userId,\n  orders,\n  shippingMethods, \n  billingAddress,\n  totalBill \n}) => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders?.orders?.items);\n  const [formData, setFormData] = useState({\n    fullName: '',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n  });\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n    script.onload = () => {};\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [userId]);\n\n  const validateForm = () => {\n    const { fullName, streetAddress, city, state, zip, country } = formData;\n    const isValid = fullName && streetAddress && city && state && zip && country;\n    setIsFormValid(isValid);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n  const handleVerify = async (orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n    console.log(razorpay_order_id, razorpay_payment_id, razorpay_signature)\n    try {\n      const response = await verifyPaymentAndUpdateOrder(orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n      return response;\n    } catch (err) {\n      setError('Payment verification failed. Please try again.');\n      console.error(err);\n    }\n  };\n  const handlePayment = async () => {\n    if (!isFormValid) {\n      setError('Please fill all the required fields.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    try {\n      const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id || orders?.orders.id);\n      const options = {\n        key: 'rzp_test_nTbKdtgjeOQLhc',\n        amount: Math.ceil(totalBill * 100),\n        currency: razorpayOrder?.currency,\n        name: 'Your Shop',\n        description: 'Payment for your order',\n        order_id: razorpayOrder?.id,\n        handler: async function (response) {\n          const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n          const verificationResult = await verifyPayment(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n    \n          if (verificationResult.success) {\n            const res = await handleVerify(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n            router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(res?.order))}`);\n          } else {\n            setError('Payment verification failed. Please try again.');\n          }\n        },\n        prefill: {\n          name: formData.fullName,\n          email: 'customer@example.com',\n          contact: '1234567890',\n        },\n        theme: {\n          color: '#F37254',\n        },\n      };\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n      \n    } catch (err) {\n      setError('Payment process failed. Please try again.');\n      console.error('Payment process failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n      {/* Order summary and steps layout */}\n      <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n        <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n        <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n          <div className=\"relative\">\n            <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n              {steps.map((step, index) => (\n                <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n                  <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n                    {step.icon ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n                      </svg>\n                    ) : step.number}\n                  </a>\n                  <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/* Order items and total */}\n      <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n        <div className=\"px-4 pt-8\">\n          <p className=\"text-xl font-medium\">Order Summary</p>\n          <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n          <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n            {orderData?.map((orderItem, index) => (\n              <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n                <img className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\" src={orderItem.product?.image || \"/_assets/image.png\"} alt={orderItem.product?.name || \"Product Image\"} />\n                <div className=\"flex w-full flex-col px-4 py-4\">\n                  <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n                  <span className=\"float-right text-gray-400\">{orderItem.product?.description || \"No description available.\"}</span>\n                  <span className=\"float-right text-gray-400\">{\"Quantity: \" + (orderItem.quantity || 1)}</span>\n                  <p className=\"text-lg font-bold\">{\"$\" + (orderItem.product?.offerPrice || \"0.00\")}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n          {/* Shipping Methods */}\n          <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n          <form className=\"mt-5 grid gap-6\">\n            {shippingMethods.map((method, index) => (\n              <div key={index} className=\"relative\">\n                <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n                <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n                <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n                  <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n                  <div className=\"ml-5\">\n                    <span className=\"mt-2 font-semibold\">{method.name}</span>\n                    <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n                  </div>\n                </label>\n              </div>\n            ))}\n          </form>\n        </div>\n\n        {/* Billing Address */}\n        <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n          <p className=\"text-xl font-medium\">Address Details</p>\n          <p className=\"text-gray-400\">Complete your order by providing your delivery address.</p>\n          <div>\n            <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n            <input type=\"text\" id=\"full-name\" name=\"fullName\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" value={formData.fullName} onChange={handleInputChange} onBlur={validateForm} />\n            <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n            <input type=\"text\" id=\"street-address\" name=\"streetAddress\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" value={formData.streetAddress} onChange={handleInputChange} onBlur={validateForm} />\n            <label htmlFor=\"city\" className=\"mt-4 mb-2 block text-sm font-medium\">City</label>\n            <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"Los Angeles\" value={formData.city} onChange={handleInputChange} onBlur={validateForm} />\n            <label htmlFor=\"state\" className=\"mt-4 mb-2 block text-sm font-medium\">State/Province</label>\n            <input type=\"text\" id=\"state\" name=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"California\" value={formData.state} onChange={handleInputChange} onBlur={validateForm} />\n            <label htmlFor=\"zip\" className=\"mt-4 mb-2 block text-sm font-medium\">ZIP/Postal Code</label>\n            <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"90001\" value={formData.zip} onChange={handleInputChange} onBlur={validateForm} />\n            <label htmlFor=\"country\" className=\"mt-4 mb-2 block text-sm font-medium\">Country</label>\n            <input type=\"text\" id=\"country\" name=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"United States\" value={formData.country} onChange={handleInputChange} onBlur={validateForm} />\n          </div>\n        </div>\n      </div>\n\n      {/* Payment Button */}\n      <div className=\"mt-10 text-center\">\n        <button className={`w-3/4 rounded-lg ${loading ? 'bg-gray-500' : 'bg-gray-900'} p-4 text-sm font-medium text-white`} disabled={loading} onClick={handlePayment}>\n          {loading ? 'Processing...' : 'Proceed to Payment'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderSummary;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AACA,2BAA2B;AAC3B,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,sBAAsB;AACtB,oBAAoB;AACpB,eAAe;AACf,UAAU;AACV,sCAAsC;AACtC,+BAA+B;AAC/B,mDAAmD;AACnD,8CAA8C;AAC9C,qGAAqG;AACrG,uCAAuC;AAEvC,sBAAsB;AACtB,uDAAuD;AACvD,mEAAmE;AACnE,8BAA8B;AAC9B,oEAAoE;AACpE,SAAS;AACT,yCAAyC;AAEzC,qBAAqB;AACrB,qFAAqF;AACrF,SAAS;AACT,kBAAkB;AAElB,yGAAyG;AACzG,8EAA8E;AAC9E,YAAY;AACZ,gIAAgI;AAChI,yBAAyB;AACzB,gFAAgF;AAChF,sBAAsB;AACtB,oEAAoE;AACpE,4BAA4B;AAC5B,QAAQ;AACR,OAAO;AAEP,wCAAwC;AACxC,wBAAwB;AACxB,mEAAmE;AACnE,YAAY;AACZ,8GAA8G;AAC9G,oCAAoC;AACpC,0BAA0B;AAC1B,4EAA4E;AAC5E,mFAAmF;AACnF,6CAA6C;AAC7C,6BAA6B;AAC7B,iDAAiD;AACjD,uCAAuC;AACvC,+CAA+C;AAC/C,mCAAmC;AACnC,6FAA6F;AAE7F,0CAA0C;AAC1C,qKAAqK;AAErK,8CAA8C;AAC9C,qJAAqJ;AACrJ,uGAAuG;AACvG,qBAAqB;AACrB,0EAA0E;AAC1E,cAAc;AACd,aAAa;AACb,qBAAqB;AACrB,mCAAmC;AACnC,2CAA2C;AAC3C,mCAAmC;AACnC,aAAa;AACb,mBAAmB;AACnB,8BAA8B;AAC9B,aAAa;AACb,WAAW;AAEX,0DAA0D;AAC1D,2HAA2H;AAC3H,oBAAoB;AAEpB,sBAAsB;AACtB,+DAA+D;AAC/D,uDAAuD;AACvD,kBAAkB;AAClB,4DAA4D;AAC5D,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,YAAY;AACZ,8BAA8B;AAC9B,yFAAyF;AAEzF,+CAA+C;AAC/C,mHAAmH;AACnH,+EAA+E;AAC/E,8EAA8E;AAC9E,uCAAuC;AACvC,wGAAwG;AACxG,8CAA8C;AAC9C,kGAAkG;AAClG,iNAAiN;AACjN,qCAAqC;AACrC,2JAA2J;AAC3J,kGAAkG;AAClG,+BAA+B;AAC/B,uCAAuC;AACvC,yBAAyB;AACzB,6HAA6H;AAC7H,wBAAwB;AACxB,oBAAoB;AACpB,oBAAoB;AACpB,mBAAmB;AACnB,iBAAiB;AACjB,eAAe;AAEf,sCAAsC;AACtC,8EAA8E;AAC9E,sCAAsC;AACtC,iEAAiE;AACjE,sGAAsG;AACtG,wCAAwC;AACxC,qHAAqH;AACrH,sDAAsD;AACtD,4FAA4F;AAC5F,uBAAuB;AACvB,2FAA2F;AAC3F,2EAA2E;AAC3E,qEAAqE;AACrE,qBAAqB;AACrB,mEAAmE;AACnE,uGAAuG;AACvG,iEAAiE;AACjE,sFAAsF;AACtF,4BAA4B;AAC5B,iEAAiE;AACjE,iEAAiE;AACjE,4BAA4B;AAC5B,sDAAsD;AACtD,wEAAwE;AACxE,yBAAyB;AACzB,yBAAyB;AACzB,uBAAuB;AACvB,kBAAkB;AAClB,mBAAmB;AAEnB,yEAAyE;AAEzE,qCAAqC;AACrC,yEAAyE;AACzE,+CAA+C;AAC/C,wDAAwD;AACxD,uDAAuD;AACvD,2IAA2I;AAC3I,4LAA4L;AAC5L,kNAAkN;AAClN,iGAAiG;AACjG,2CAA2C;AAC3C,gFAAgF;AAChF,+FAA+F;AAC/F,2BAA2B;AAC3B,2BAA2B;AAC3B,uBAAuB;AACvB,kBAAkB;AAClB,oBAAoB;AACpB,iBAAiB;AAEjB,kCAAkC;AAClC,+DAA+D;AAC/D,mEAAmE;AACnE,qGAAqG;AACrG,yCAAyC;AACzC,kBAAkB;AAClB,2GAA2G;AAC3G,8OAA8O;AAC9O,qHAAqH;AACrH,2PAA2P;AAC3P,0CAA0C;AAC1C,6CAA6C;AAC7C,gGAAgG;AAChG,oOAAoO;AACpO,uBAAuB;AACvB,6CAA6C;AAC7C,kGAAkG;AAClG,sMAAsM;AACtM,gEAAgE;AAChE,mEAAmE;AACnE,yEAAyE;AACzE,wBAAwB;AACxB,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AAErB,0CAA0C;AAC1C,6CAA6C;AAC7C,mGAAmG;AACnG,sOAAsO;AACtO,uBAAuB;AACvB,6CAA6C;AAC7C,sGAAsG;AACtG,0MAA0M;AAC1M,oEAAoE;AACpE,wEAAwE;AACxE,6EAA6E;AAC7E,wBAAwB;AACxB,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,eAAe;AAEf,+BAA+B;AAC/B,uCAAuC;AACvC,iIAAiI;AACjI,4DAA4D;AAC5D,oBAAoB;AACpB,eAAe;AACf,aAAa;AACb,OAAO;AACP,KAAK;AAEL,+BAA+B;AAG/B,MAAM,eAAe,CAAC,EACpB,KAAK,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,eAAe,EACf,cAAc,EACd,SAAS,EACV;IACC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,QAAQ,OAAO,SAAS,QAAQ,QAAQ;IAC3F,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,UAAU;QACV,eAAe;QACf,MAAM;QACN,OAAO;QACP,KAAK;QACL,SAAS;IACX;IACA,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,GAAG,GAAG;QACb,OAAO,MAAM,GAAG,KAAO;QACvB,SAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,OAAO;YACL,SAAS,IAAI,CAAC,WAAW,CAAC;QAC5B;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,eAAe;QACnB,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;QAC/D,MAAM,UAAU,YAAY,iBAAiB,QAAQ,SAAS,OAAO;QACrE,eAAe;IACjB;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,WAAa,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IACA,MAAM,eAAe,OAAO,SAAQ,mBAAmB,qBAAqB;QAC1E,QAAQ,GAAG,CAAC,mBAAmB,qBAAqB;QACpD,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,qIAAA,CAAA,8BAA2B,AAAD,EAAE,SAAQ,mBAAmB,qBAAqB;YACnG,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC;QAChB;IACF;IACA,MAAM,gBAAgB;QACpB,IAAI,CAAC,aAAa;YAChB,SAAS;YACT;QACF;QAEA,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,GAAG,MAAM,CAAA,GAAA,qIAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,QAAQ,OAAO,MAAM,QAAQ,OAAO;YACnG,MAAM,UAAU;gBACd,KAAK;gBACL,QAAQ,KAAK,IAAI,CAAC,YAAY;gBAC9B,UAAU,eAAe;gBACzB,MAAM;gBACN,aAAa;gBACb,UAAU,eAAe;gBACzB,SAAS,eAAgB,QAAQ;oBAC/B,MAAM,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,GAAG;oBACvE,MAAM,qBAAqB,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,QAAQ,OAAO,MAAM,QAAQ,OAAO,IAAI,mBAAmB,qBAAqB;oBAEvI,IAAI,mBAAmB,OAAO,EAAE;wBAC9B,MAAM,MAAM,MAAM,aAAa,QAAQ,QAAQ,OAAO,MAAM,QAAQ,OAAO,IAAI,mBAAmB,qBAAqB;wBACvH,OAAO,IAAI,CAAC,CAAC,uBAAuB,EAAE,mBAAmB,KAAK,SAAS,CAAC,KAAK,SAAS;oBACxF,OAAO;wBACL,SAAS;oBACX;gBACF;gBACA,SAAS;oBACP,MAAM,SAAS,QAAQ;oBACvB,OAAO;oBACP,SAAS;gBACX;gBACA,OAAO;oBACL,OAAO;gBACT;YACF;YAEA,MAAM,MAAM,IAAI,OAAO,QAAQ,CAAC;YAChC,IAAI,IAAI;QAEV,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC,2BAA2B;QAC3C,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;;YACE,uBAAS,8OAAC;gBAAI,WAAU;0BAA0C;;;;;;0BAEnE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,MAAK;wBAAI,WAAU;kCAAoC;;;;;;kCAC1D,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAG,WAAU;0CACX,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;wCAAe,WAAU;;0DACxB,8OAAC;gDAAE,WAAW,CAAC,4EAA4E,EAAE,KAAK,MAAM,GAAG,oCAAoC,0BAA0B;gDAAE,MAAM,KAAK,IAAI;0DACvL,KAAK,IAAI,iBACR,8OAAC;oDAAI,OAAM;oDAA6B,WAAU;oDAAU,MAAK;oDAAO,SAAQ;oDAAY,QAAO;oDAAe,aAAY;8DAC5H,cAAA,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,GAAG,KAAK,QAAQ;;;;;;;;;;2DAEnE,KAAK,MAAM;;;;;;0DAEjB,8OAAC;gDAAK,WAAW,CAAC,cAAc,EAAE,KAAK,MAAM,GAAG,kBAAkB,iBAAiB;0DAAG,KAAK,KAAK;;;;;;;uCARzF;;;;;;;;;;;;;;;;;;;;;;;;;;0BAiBnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;0CAC7B,8OAAC;gCAAI,WAAU;0CACZ,WAAW,IAAI,CAAC,WAAW,sBAC1B,8OAAC;wCAAgB,WAAU;;0DACzB,8OAAC;gDAAI,WAAU;gDAA6D,KAAK,UAAU,OAAO,EAAE,SAAS;gDAAsB,KAAK,UAAU,OAAO,EAAE,QAAQ;;;;;;0DACnK,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEAAiB,WAAW,QAAQ,QAAQ;;;;;;kEAC5D,8OAAC;wDAAK,WAAU;kEAA6B,UAAU,OAAO,EAAE,eAAe;;;;;;kEAC/E,8OAAC;wDAAK,WAAU;kEAA6B,eAAe,CAAC,UAAU,QAAQ,IAAI,CAAC;;;;;;kEACpF,8OAAC;wDAAE,WAAU;kEAAqB,MAAM,CAAC,UAAU,OAAO,EAAE,cAAc,MAAM;;;;;;;;;;;;;uCAN1E;;;;;;;;;;0CAYd,8OAAC;gCAAE,WAAU;0CAAe,kBAAkB;;;;;;0CAG9C,8OAAC;gCAAE,WAAU;0CAA2B;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CACb,gBAAgB,GAAG,CAAC,CAAC,QAAQ,sBAC5B,8OAAC;wCAAgB,WAAU;;0DACzB,8OAAC;gDAAM,WAAU;gDAAc,IAAI,CAAC,MAAM,EAAE,OAAO;gDAAE,MAAK;gDAAQ,MAAK;gDAAQ,gBAAgB,OAAO,cAAc;;;;;;0DACpH,8OAAC;gDAAK,WAAU;;;;;;0DAChB,8OAAC;gDAAM,WAAU;gDAAmJ,SAAS,CAAC,MAAM,EAAE,OAAO;;kEAC3L,8OAAC;wDAAI,WAAU;wDAAsB,KAAK,OAAO,KAAK;wDAAE,KAAK,OAAO,IAAI;;;;;;kEACxE,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAAsB,OAAO,IAAI;;;;;;0EACjD,8OAAC;gEAAE,WAAU;0EAAoC,OAAO,WAAW;;;;;;;;;;;;;;;;;;;uCAP/D;;;;;;;;;;;;;;;;kCAgBhB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;0CAC7B,8OAAC;;kDACC,8OAAC;wCAAM,SAAQ;wCAAY,WAAU;kDAAsC;;;;;;kDAC3E,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAY,MAAK;wCAAW,WAAU;wCAAyI,aAAY;wCAAW,OAAO,SAAS,QAAQ;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;kDAC3R,8OAAC;wCAAM,SAAQ;wCAAiB,WAAU;kDAAsC;;;;;;kDAChF,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAiB,MAAK;wCAAgB,WAAU;wCAAyI,aAAY;wCAAc,OAAO,SAAS,aAAa;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;kDAC7S,8OAAC;wCAAM,SAAQ;wCAAO,WAAU;kDAAsC;;;;;;kDACtE,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAO,MAAK;wCAAO,WAAU;wCAAyI,aAAY;wCAAc,OAAO,SAAS,IAAI;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;kDACjR,8OAAC;wCAAM,SAAQ;wCAAQ,WAAU;kDAAsC;;;;;;kDACvE,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAQ,MAAK;wCAAQ,WAAU;wCAAyI,aAAY;wCAAa,OAAO,SAAS,KAAK;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;kDACnR,8OAAC;wCAAM,SAAQ;wCAAM,WAAU;kDAAsC;;;;;;kDACrE,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAM,MAAK;wCAAM,WAAU;wCAAyI,aAAY;wCAAQ,OAAO,SAAS,GAAG;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;kDACxQ,8OAAC;wCAAM,SAAQ;wCAAU,WAAU;kDAAsC;;;;;;kDACzE,8OAAC;wCAAM,MAAK;wCAAO,IAAG;wCAAU,MAAK;wCAAU,WAAU;wCAAyI,aAAY;wCAAgB,OAAO,SAAS,OAAO;wCAAE,UAAU;wCAAmB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;0BAMlS,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAO,WAAW,CAAC,iBAAiB,EAAE,UAAU,gBAAgB,cAAc,mCAAmC,CAAC;oBAAE,UAAU;oBAAS,SAAS;8BAC9I,UAAU,kBAAkB;;;;;;;;;;;;;;;;;AAKvC;uCAEe"}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserCartService.js"],"sourcesContent":["\"use client\";\n\nimport { useSelector } from \"react-redux\";\nimport { axiosInstance } from \"../api/axios\";\n\nfunction UserCartService() {\n  const token = useSelector((state) => state.session.token);\n\n  const cartKey = 'shopflow';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n\n  this.loadCart = function() {\n    const storedCart = localStorage.getItem(cartKey);\n    return storedCart ? JSON.parse(storedCart) : [];\n  };\n\n  this.saveCart = function(cart) {\n    localStorage.setItem(cartKey, JSON.stringify(cart));\n  };\n\n  this.migrateCart = async function(userId) {\n    const guestCart = this.loadCart();\n\n    if (guestCart.length > 0) {\n      for (const item of guestCart) {\n        try {\n          await this.addItemToCart(userId, item.productId, item.quantity);\n        } catch (error) {\n          console.error('Error migrating cart item:', error);\n        }\n      }\n      this.clearCart();\n    }\n  };\n\n  this.addItemToCart = async function(userId, productId, quantity = 1) {\n    console.log(userId);\n    console.log(productId);\n    try {\n      const response = await axiosInstance.post(\n        // `/user/cart/addItemToCart?userId=${userId}&productId==${userId}4&quantity=${quantity}`, \n        `/user/cart/addItemToCart`,\n       {},\n        {\n          params:{\n            \n              userId,\n              productId,\n              quantity\n             \n          },\n          headers: getHeaders()\n        }\n      );\n      \n\n        return response.data;\n    \n    \n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.viewCart = async function(userId) {\n    try {\n      const response = await axiosInstance.get('/user/cart/viewCart', {\n        params: { userId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data.data || [];\n      } else {\n        throw new Error(response.data.message || 'Failed to retrieve cart');\n      }\n    } catch (error) {\n      console.error('Error viewing cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.deleteFromCart = async function(userId, productId) {\n    try {\n      const response = await axiosInstance.delete('/user/cart/deleteFromCart', {\n        params: { userId, productId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data.message || 'Failed to delete item from cart');\n      }\n    } catch (error) {\n      console.error('Error deleting item from cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.updateCartCount = async function(userId, productId, operation) {\n    try {\n      const response = await axiosInstance.put('/user/cart/cartCount', {}, {\n        params: { userId, productId, operation },\n        headers: getHeaders(),\n      });\n      console.log(response.status)\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data || 'Failed to update cart count');\n      }\n    } catch (error) {\n      console.error('Error updating cart count:', error);\n      throw error;\n    }\n  };\n\n  this.clearCart = function() {\n    localStorage.removeItem(cartKey);\n  };\n}\n\nexport default UserCartService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1051, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}