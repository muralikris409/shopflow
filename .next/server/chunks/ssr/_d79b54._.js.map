{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/orders/page.js"],"sourcesContent":["const OrderPage = () => {\n    const [orders, setOrders] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [activeTab, setActiveTab] = useState('All');\n    const userId = useSelector(state => state.session.user?.id);\n  \n    useEffect(() => {\n      const fetchOrders = async () => {\n        try {\n          setLoading(true);\n          const data = await getOrderByUserId(userId);\n          setOrders(data.orders);\n        } catch (err) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n  \n      if (userId) {\n        fetchOrders();\n      }\n    }, [userId]);\n  \n    const handleCancelOrder = async (orderId) => {\n      try {\n        setLoading(true);\n        await cancelOrder(orderId);\n        setOrders((prevOrders) =>\n          prevOrders.map((order) =>\n            order.id === orderId ? { ...order, orderStatus: 'Cancelled' } : order\n          )\n        );\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    const filteredOrders = orders.filter(order => {\n      if (activeTab === 'All') return true;\n      if (activeTab === 'On Shipping' && order.orderStatus === 'PENDING') return true;\n      if (activeTab === 'Arrived' && order.orderStatus === 'OnDeliver') return true;\n      if (activeTab === 'Cancelled' && order.orderStatus === 'Cancelled') return true;\n      return false;\n    });\n  \n    return (\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-2xl font-bold mb-4\">My Orders</h1>\n        <div className=\"flex space-x-4 mb-4\">\n          {['All', 'On Shipping', 'Arrived', 'Cancelled'].map((tab) => (\n            <button\n              key={tab}\n              className={`px-4 py-2 rounded ${activeTab === tab ? 'bg-gray-900 text-white' : 'bg-gray-200'}`}\n              onClick={() => setActiveTab(tab)}\n            >\n              {tab}\n            </button>\n          ))}\n        </div>\n        {loading && <div className=\"text-center\">Loading...</div>}\n        {error && <div className=\"text-red-500 text-center\">Error: {error}</div>}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {filteredOrders.map((order) => (\n            <OrderTile key={order.id} order={order} onCancel={handleCancelOrder} />\n          ))}\n        </div>\n      </div>\n    );\n  };\n  "],"names":[],"mappings":";AAAA,MAAM,YAAY;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,SAAS,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,SAAS;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,SAAS;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,SAAS;IAC3C,MAAM,SAAS,YAAY,CAAA,QAAS,MAAM,OAAO,CAAC,IAAI,EAAE;IAExD,UAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,WAAW;gBACX,MAAM,OAAO,MAAM,iBAAiB;gBACpC,UAAU,KAAK,MAAM;YACvB,EAAE,OAAO,KAAK;gBACZ,SAAS,IAAI,OAAO;YACtB,SAAU;gBACR,WAAW;YACb;QACF;QAEA,IAAI,QAAQ;YACV;QACF;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,WAAW;YACX,MAAM,YAAY;YAClB,UAAU,CAAC,aACT,WAAW,GAAG,CAAC,CAAC,QACd,MAAM,EAAE,KAAK,UAAU;wBAAE,GAAG,KAAK;wBAAE,aAAa;oBAAY,IAAI;QAGtE,EAAE,OAAO,KAAK;YACZ,SAAS,IAAI,OAAO;QACtB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB,OAAO,MAAM,CAAC,CAAA;QACnC,IAAI,cAAc,OAAO,OAAO;QAChC,IAAI,cAAc,iBAAiB,MAAM,WAAW,KAAK,WAAW,OAAO;QAC3E,IAAI,cAAc,aAAa,MAAM,WAAW,KAAK,aAAa,OAAO;QACzE,IAAI,cAAc,eAAe,MAAM,WAAW,KAAK,aAAa,OAAO;QAC3E,OAAO;IACT;IAEA,qBACE,QAAC;QAAI,WAAU;;0BACb,QAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,QAAC;gBAAI,WAAU;0BACZ;oBAAC;oBAAO;oBAAe;oBAAW;iBAAY,CAAC,GAAG,CAAC,CAAC,oBACnD,QAAC;wBAEC,WAAW,CAAC,kBAAkB,EAAE,cAAc,MAAM,2BAA2B,eAAe;wBAC9F,SAAS,IAAM,aAAa;kCAE3B;uBAJI;;;;;;;;;;YAQV,yBAAW,QAAC;gBAAI,WAAU;0BAAc;;;;;;YACxC,uBAAS,QAAC;gBAAI,WAAU;;oBAA2B;oBAAQ;;;;;;;0BAC5D,QAAC;gBAAI,WAAU;0BACZ,eAAe,GAAG,CAAC,CAAC,sBACnB,QAAC;wBAAyB,OAAO;wBAAO,UAAU;uBAAlC,MAAM,EAAE;;;;;;;;;;;;;;;;AAKlC"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,cAAAA,CAAAA,CAAAA,EAAAA,2SAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,2SAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,2SAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,SAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}