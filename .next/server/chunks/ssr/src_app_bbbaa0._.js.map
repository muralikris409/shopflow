{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserCartService.js"],"sourcesContent":["\"use client\";\n\nimport { useSelector } from \"react-redux\";\nimport { axiosInstance } from \"../api/axios\";\n\nfunction UserCartService() {\n  const token = useSelector((state) => state.session.token);\n\n  const cartKey = 'shopflow';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n\n  this.loadCart = function() {\n    const storedCart = localStorage.getItem(cartKey);\n    return storedCart ? JSON.parse(storedCart) : [];\n  };\n\n  this.saveCart = function(cart) {\n    localStorage.setItem(cartKey, JSON.stringify(cart));\n  };\n\n  this.migrateCart = async function(userId) {\n    const guestCart = this.loadCart();\n\n    if (guestCart.length > 0) {\n      for (const item of guestCart) {\n        try {\n          await this.addItemToCart(userId, item.productId, item.quantity);\n        } catch (error) {\n          console.error('Error migrating cart item:', error);\n        }\n      }\n      this.clearCart();\n    }\n  };\n\n  this.addItemToCart = async function(userId, productId, quantity = 1) {\n    console.log(userId);\n    console.log(productId);\n    try {\n      const response = await axiosInstance.post(\n        // `/user/cart/addItemToCart?userId=${userId}&productId==${userId}4&quantity=${quantity}`, \n        `/user/cart/addItemToCart`,\n       {},\n        {\n          params:{\n            \n              userId,\n              productId,\n              quantity\n             \n          },\n          headers: getHeaders()\n        }\n      );\n      \n\n        return response.data;\n    \n    \n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.viewCart = async function(userId) {\n    try {\n      const response = await axiosInstance.get('/user/cart/viewCart', {\n        params: { userId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data.data || [];\n      } else {\n        throw new Error(response.data.message || 'Failed to retrieve cart');\n      }\n    } catch (error) {\n      console.error('Error viewing cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.deleteFromCart = async function(userId, productId) {\n    try {\n      const response = await axiosInstance.delete('/user/cart/deleteFromCart', {\n        params: { userId, productId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data.message || 'Failed to delete item from cart');\n      }\n    } catch (error) {\n      console.error('Error deleting item from cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.updateCartCount = async function(userId, productId, operation) {\n    try {\n      const response = await axiosInstance.put('/user/cart/cartCount', {}, {\n        params: { userId, productId, operation },\n        headers: getHeaders(),\n      });\n      console.log(response.status)\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data || 'Failed to update cart count');\n      }\n    } catch (error) {\n      console.error('Error updating cart count:', error);\n      throw error;\n    }\n  };\n\n  this.clearCart = function() {\n    localStorage.removeItem(cartKey);\n  };\n}\n\nexport default UserCartService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}