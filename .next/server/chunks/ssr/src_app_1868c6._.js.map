{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/Checkout.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { createOrder, failedVerify, verifyPayment } from '../service/PaymentService';  \n// import { checkOutOrder, getOrderById, verifyPaymentAndUpdateOrder } from '../service/OrderService';\n// import { useRouter } from 'next/navigation';\n// // const OrderSummary = ({ \n// //   title, \n// //   steps, \n// //   userId,\n// //   orders,\n// //   shippingMethods, \n// //   billingAddress,\n// //   totalBill \n// // }) => {\n// //     console.log(orders?.orders.id);\n// //    const router=useRouter();\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState(null);\n// //   const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders.orders.items);\n// //   console.log(\"orderData:\", orders);\n\n// //   useEffect(() => {\n// //     const script = document.createElement('script');\n// //     script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n// //     script.onload = () => {\n// //       // Now you can use Razorpay when the script is fully loaded\n// //     };\n// //     document.body.appendChild(script);\n\n// //     return () => {\n// //       document.body.removeChild(script); // Cleanup script when component unmounts\n// //     };\n// //   }, [userId]);\n\n// //   const handleVerify = async (orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n// //     console.log(razorpay_order_id, razorpay_payment_id, razorpay_signature)\n// //     try {\n// //       const response = await verifyPaymentAndUpdateOrder(orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n// //       return response;\n// //       // Handle successful verification (e.g., redirect to confirmation page)\n// //     } catch (err) {\n// //       setError('Payment verification failed. Please try again.');\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handlePayment = async () => {\n// //     setLoading(true);\n// //     setError(null); // Reset error state before starting payment\n// //     try {\n// //       const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id||orders?.orders.id);\n// //       console.log(razorpayOrder);\n// //       const options = {\n// //         key: 'rzp_test_nTbKdtgjeOQLhc', // Replace with your Razorpay Key\n// //         amount: Math.ceil(totalBill * 100), // Amount in paise (multiply by 100)\n// //         currency: razorpayOrder?.currency,\n// //         name: 'Your Shop',\n// //         description: 'Payment for your order',\n// //         order_id: razorpayOrder?.id,\n// //         handler: async function (response) {\n// //           console.log(response);\n// //           const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n\n// //           // Step 3: Verify the payment\n// //           const verificationResult = await verifyPayment(orders?.orders?.order?.id||orders?.orders.id,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n    \n// //           if (verificationResult.success) {\n// //             const res=await handleVerify(orders?.orders?.order?.id||orders?.orders.id,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n// //             router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(res?.order))}`);\n// //           } else {\n// //             setError('Payment verification failed. Please try again.');\n// //           }\n// //         },\n// //         prefill: {\n// //           name: 'Customer Name',\n// //           email: 'customer@example.com',\n// //           contact: '1234567890',\n// //         },\n// //         theme: {\n// //           color: '#F37254',\n// //         },\n// //       };\n\n// //       // Step 4: Instantiate Razorpay after script load\n// //       const rzp = new window.Razorpay(options); // Use `window.Razorpay` since it's globally available after script load\n// //       rzp.open();\n      \n// //     } catch (err) {\n// //       setError('Payment process failed. Please try again.');\n// //       console.error('Payment process failed:', err);\n// //     } finally {\n// //       setLoading(false); // Ensure loading state is reset\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       {/* Error Message */}\n// //       {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n\n// //       {/* Order summary and steps layout */}\n// //       <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n// //         <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n// //         <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n// //           <div className=\"relative\">\n// //             <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n// //               {steps.map((step, index) => (\n// //                 <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n// //                   <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n// //                     {step.icon ? (\n// //                       <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n// //                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n// //                       </svg>\n// //                     ) : step.number}\n// //                   </a>\n// //                   <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           </div>\n// //         </div>\n// //       </div>\n      \n// //       {/* Order items and total */}\n// //       <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n// //         <div className=\"px-4 pt-8\">\n// //           <p className=\"text-xl font-medium\">Order Summary</p>\n// //           <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n// //           {/* Order items display */}\n// //           <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n// //             {orderData?.map((orderItem, index) => (\n// //               <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n// //                 <img\n// //                   className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\"\n// //                   src={orderItem.product?.image || \"/_assets/image.png\"}\n// //                   alt={orderItem.product?.name || \"Product Image\"}\n// //                 />\n// //                 <div className=\"flex w-full flex-col px-4 py-4\">\n// //                   <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n// //                   <span className=\"float-right text-gray-400\">\n// //                     {orderItem.product?.description || \"No description available.\"}\n// //                   </span>\n// //                   <span className=\"float-right text-gray-400\">\n// //                     {\"Quantity: \" + (orderItem.quantity || 1)}\n// //                   </span>\n// //                   <p className=\"text-lg font-bold\">\n// //                     {\"$\" + (orderItem.product?.offerPrice || \"0.00\")}\n// //                   </p>\n// //                 </div>\n// //               </div>\n// //             ))}\n// //           </div>\n          \n// //           <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n// //           {/* Shipping Methods */}\n// //           <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n// //           <form className=\"mt-5 grid gap-6\">\n// //             {shippingMethods.map((method, index) => (\n// //               <div key={index} className=\"relative\">\n// //                 <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n// //                 <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n// //                 <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n// //                   <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n// //                   <div className=\"ml-5\">\n// //                     <span className=\"mt-2 font-semibold\">{method.name}</span>\n// //                     <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n// //                   </div>\n// //                 </label>\n// //               </div>\n// //             ))}\n// //           </form>\n// //         </div>\n\n// //         {/* Billing Address */}\n// //         <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n// //           <p className=\"text-xl font-medium\">Address Details</p>\n// //           <p className=\"text-gray-400\">Complete your order by providing your delivery address.</p>\n// //           {/* Billing Address Form */}\n// //           <div>\n// //             <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n// //             <input type=\"text\" id=\"full-name\" name=\"full-name\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" />\n// //             <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n// //             <input type=\"text\" id=\"street-address\" name=\"street-address\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" />\n// //             <div className=\"flex mt-4\">\n// //               <div className=\"w-1/2 pr-2\">\n// //                 <label htmlFor=\"city\" className=\"mb-2 block text-sm font-medium\">City</label>\n// //                 <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"City\" />\n// //               </div>\n// //               <div className=\"w-1/2 pl-2\">\n// //                 <label htmlFor=\"state\" className=\"mb-2 block text-sm font-medium\">State</label>\n// //                 <select name=\"state\" id=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n// //                   <option value=\"State\">Select State</option>\n// //                   {billingAddress.states.map((state, index) => (\n// //                     <option key={index} value={state}>{state}</option>\n// //                   ))}\n// //                 </select>\n// //               </div>\n// //             </div>\n\n// //             <div className=\"flex mt-4\">\n// //               <div className=\"w-1/2 pr-2\">\n// //                 <label htmlFor=\"zip\" className=\"mb-2 block text-sm font-medium\">ZIP Code</label>\n// //                 <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"ZIP Code\" />\n// //               </div>\n// //               <div className=\"w-1/2 pl-2\">\n// //                 <label htmlFor=\"country\" className=\"mb-2 block text-sm font-medium\">Country</label>\n// //                 <select name=\"country\" id=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n// //                   <option value=\"Country\">Select Country</option>\n// //                   {billingAddress.countries.map((country, index) => (\n// //                     <option key={index} value={country}>{country}</option>\n// //                   ))}\n// //                 </select>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n      \n// //       {/* Payment Button */}\n// //       <div className=\"py-5 sm:px-6\">\n// //         <button onClick={handlePayment} className=\"w-full rounded-md bg-green-500 text-white py-3 text-xl hover:bg-green-700\">\n// //           {loading ? 'Processing Payment...' : 'Pay Now'}\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default OrderSummary;\n\n\n// const OrderSummary = ({ \n//   title, \n//   steps, \n//   userId,\n//   orders,\n//   shippingMethods, \n//   billingAddress,\n//   totalBill \n// }) => {\n//   const router = useRouter();\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders?.orders?.items);\n//   const [formData, setFormData] = useState({\n//     fullName: '',\n//     streetAddress: '',\n//     city: '',\n//     state: '',\n//     zip: '',\n//     country: '',\n//   });\n//   const [isFormValid, setIsFormValid] = useState(false);\n\n//   useEffect(() => {\n//     const script = document.createElement('script');\n//     script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n//     script.onload = () => {};\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script);\n//     };\n//   }, [userId]);\n\n//   const validateForm = () => {\n//     const { fullName, streetAddress, city, state, zip, country } = formData;\n//     const isValid = fullName && streetAddress && city && state && zip && country;\n//     setIsFormValid(isValid);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevData) => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n//   const handleVerify = async (orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n//     console.log(razorpay_order_id, razorpay_payment_id, razorpay_signature)\n//     try {\n//       const response = await verifyPaymentAndUpdateOrder(orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n//       return response;\n//     } catch (err) {\n//       setError('Payment verification failed. Please try again.');\n//       console.error(JSON.stringify(err));\n//     }\n//   };\n//   const handlePayment = async () => {\n//     if (!isFormValid) {\n//       setError('Please fill all the required fields.');\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError(null);\n//     try {\n//       const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id || orders?.orders.id);\n//       const options = {\n//         key: 'rzp_test_nTbKdtgjeOQLhc',\n//         amount: Math.ceil(totalBill * 100),\n//         currency: razorpayOrder?.currency,\n//         name: 'Your Shop',\n//         description: 'Payment for your order',\n//         order_id: razorpayOrder?.id,\n//         handler: async function (response) {\n//           const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n//         //   const verificationResult = await verifyPayment(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n//         const verificationResult = await handleVerify(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n\n//           if (verificationResult.success) {\n//             router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(verificationResult?.order))}`);\n//           } else {\n//             console.log(\"failed\");\n//             await failedVerify(orders?.orders?.order?.id || orders?.orders.id);\n//             setError('Payment verification failed. Please try again.');\n//           }\n//         },\n//         prefill: {\n//           name: formData.fullName,\n//           email: 'customer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: {\n//           color: '#F37254',\n//         },\n//       };\n\n//       const rzp = new window.Razorpay(options);\n//       rzp.open();\n      \n//     } catch (err) {\n//       setError('Payment process failed. Please try again.');\n//       console.error('Payment process failed:', err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n//       {/* Order summary and steps layout */}\n//       <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n//         <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n//         <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n//           <div className=\"relative\">\n//             <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n//               {steps.map((step, index) => (\n//                 <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n//                   <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n//                     {step.icon ? (\n//                       <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n//                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n//                       </svg>\n//                     ) : step.number}\n//                   </a>\n//                   <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Order items and total */}\n//       <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n//         <div className=\"px-4 pt-8\">\n//           <p className=\"text-xl font-medium\">Order Summary</p>\n//           <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n//           <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n//             {orderData?.map((orderItem, index) => (\n//               <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n//                 <img className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\" src={orderItem.product?.image || \"/_assets/image.png\"} alt={orderItem.product?.name || \"Product Image\"} />\n//                 <div className=\"flex w-full flex-col px-4 py-4\">\n//                   <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n//                   <span className=\"float-right text-gray-400\">{orderItem.product?.description || \"No description available.\"}</span>\n//                   <span className=\"float-right text-gray-400\">{\"Quantity: \" + (orderItem.quantity || 1)}</span>\n//                   <p className=\"text-lg font-bold\">{\"$\" + (orderItem.product?.offerPrice || \"0.00\")}</p>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n          \n//           <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n//           {/* Shipping Methods */}\n//           <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n//           <form className=\"mt-5 grid gap-6\">\n//             {shippingMethods.map((method, index) => (\n//               <div key={index} className=\"relative\">\n//                 <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n//                 <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n//                 <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n//                   <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n//                   <div className=\"ml-5\">\n//                     <span className=\"mt-2 font-semibold\">{method.name}</span>\n//                     <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n//                   </div>\n//                 </label>\n//               </div>\n//             ))}\n//           </form>\n//         </div>\n\n//         {/* Billing Address */}\n//         <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n//           <p className=\"text-xl font-medium\">Address Details</p>\n//           <p className=\"text-gray-400\">Complete your order by providing your delivery address.</p>\n//           <div>\n//             <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n//             <input type=\"text\" id=\"full-name\" name=\"fullName\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" value={formData.fullName} onChange={handleInputChange} onBlur={validateForm} />\n//             <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n//             <input type=\"text\" id=\"street-address\" name=\"streetAddress\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" value={formData.streetAddress} onChange={handleInputChange} onBlur={validateForm} />\n//             <label htmlFor=\"city\" className=\"mt-4 mb-2 block text-sm font-medium\">City</label>\n//             <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"Los Angeles\" value={formData.city} onChange={handleInputChange} onBlur={validateForm} />\n//             <label htmlFor=\"state\" className=\"mt-4 mb-2 block text-sm font-medium\">State/Province</label>\n//             <input type=\"text\" id=\"state\" name=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"California\" value={formData.state} onChange={handleInputChange} onBlur={validateForm} />\n//             <label htmlFor=\"zip\" className=\"mt-4 mb-2 block text-sm font-medium\">ZIP/Postal Code</label>\n//             <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"90001\" value={formData.zip} onChange={handleInputChange} onBlur={validateForm} />\n//             <label htmlFor=\"country\" className=\"mt-4 mb-2 block text-sm font-medium\">Country</label>\n//             <input type=\"text\" id=\"country\" name=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"United States\" value={formData.country} onChange={handleInputChange} onBlur={validateForm} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Payment Button */}\n//       <div className=\"mt-10 text-center\">\n//         <button className={`w-3/4 rounded-lg ${loading ? 'bg-gray-500' : 'bg-gray-900'} p-4 text-sm font-medium text-white`} disabled={loading} onClick={handlePayment}>\n//           {loading ? 'Processing...' : 'Proceed to Payment'}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderSummary;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { checkOutOrder, verifyPaymentAndUpdateOrder, failedVerify } from '../../service/OrderService';\n\nconst OrderSummary = ({\n  title,\n  steps,\n  userId,\n  orders,\n  shippingMethods,\n  totalBill,\n  existingAddresses = [],\n}) => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders?.orders?.items);\n  const [formData, setFormData] = useState({\n    fullName: '',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n  });\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [useExistingAddress, setUseExistingAddress] = useState(false);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n    script.onload = () => {};\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [userId]);\n\n  const validateForm = () => {\n    if (useExistingAddress && selectedAddress) {\n      setIsFormValid(true);\n    } else {\n      const { fullName, streetAddress, city, state, zip, country } = formData;\n      setIsFormValid(fullName && streetAddress && city && state && zip && country);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n    validateForm();\n  };\n\n  const handleAddressToggle = () => {\n    setUseExistingAddress(!useExistingAddress);\n    if (useExistingAddress) {\n      setFormData({\n        fullName: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: '',\n      });\n    } else if (selectedAddress) {\n      setFormData(selectedAddress);\n    }\n    validateForm();\n  };\n\n  const handleAddressSelect = (e) => {\n    const addressId = e.target.value;\n    const address = existingAddresses.find((addr) => addr.id === addressId);\n    setSelectedAddress(address);\n    setFormData(address);\n    validateForm();\n  };\n\n  const handleVerify = async (orderId, razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n    try {\n      const response = await verifyPaymentAndUpdateOrder(orderId, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n      return response;\n    } catch (err) {\n      setError('Payment verification failed. Please try again.');\n      console.error(JSON.stringify(err));\n    }\n  };\n\n  const handlePayment = async () => {\n    if (!isFormValid) {\n      setError('Please fill all the required fields.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    try {\n      const { razorpayOrder } = await checkOutOrder(orders?.orders?.order?.id || orders?.orders.id);\n      const options = {\n        key: 'rzp_test_nTbKdtgjeOQLhc',\n        amount: Math.ceil(totalBill * 100),\n        currency: razorpayOrder?.currency,\n        name: 'Your Shop',\n        description: 'Payment for your order',\n        order_id: razorpayOrder?.id,\n        handler: async function (response) {\n          const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n          const verificationResult = await handleVerify(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n\n          if (verificationResult.success) {\n            router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(verificationResult?.order))}`);\n          } else {\n            await failedVerify(orders?.orders?.order?.id || orders?.orders.id);\n            setError('Payment verification failed. Please try again.');\n          }\n        },\n        prefill: {\n          name: formData.fullName,\n          email: 'customer@example.com',\n          contact: '1234567890',\n        },\n        theme: {\n          color: '#F37254',\n        },\n      };\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      setError('Payment process failed. Please try again.');\n      console.error('Payment process failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n      <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n        <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n        <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n          <div className=\"relative\">\n            <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n              {steps.map((step, index) => (\n                <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n                  <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n                    {step.icon ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n                      </svg>\n                    ) : step.number}\n                  </a>\n                  <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n        <div className=\"px-4 pt-8\">\n          <p className=\"text-xl font-medium\">Order Summary</p>\n          <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n          <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n            {orderData?.map((orderItem, index) => (\n              <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n                <img className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\" src={orderItem.product?.image || \"/_assets/image.png\"} alt={orderItem.product?.name || \"Product Image\"} />\n                <div className=\"flex w-full flex-col px-4 py-4\">\n                  <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n                  <span className=\"float-right text-gray-400\">{orderItem.product?.description || \"No description available.\"}</span>\n                  <span className=\"float-right text-gray-400\">{\"Quantity: \" + (orderItem.quantity || 1)}</span>\n                  <p className=\"text-lg font-bold\">{\"$\" + (orderItem.product?.offerPrice || \"0.00\")}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n          <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n          <form className=\"mt-5 grid gap-6\">\n            {shippingMethods.map((method, index) => (\n              <div key={index} className=\"relative\">\n                <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n                <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n                <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n                  <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n                  <div className=\"ml-5\">\n                    <span className=\"mt-2 font-semibold\">{method.name}</span>\n                    <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n                  </div>\n                </label>\n              </div>\n            ))}\n          </form>\n        </div>\n\n        <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n          <p className=\"text-xl font-medium\">Payment Details</p>\n          <p className=\"text-gray-400\">Complete your order by providing your payment details.</p>\n          <div className=\"mt-6\">\n            <div className=\"mb-2 flex flex-col sm:flex-row\">\n              <h3 className=\"font-medium text-sm text-gray-700\">Billing Address</h3>\n              <div className=\"ml-auto flex items-center\">\n                <input id=\"use-existing-address\" type=\"checkbox\" className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\" checked={useExistingAddress} onChange={handleAddressToggle} />\n                <label htmlFor=\"use-existing-address\" className=\"ml-2 text-sm text-gray-600\">Use existing address</label>\n              </div>\n            </div>\n\n            {useExistingAddress ? (\n              <select onChange={handleAddressSelect} className=\"mt-1 block w-full rounded-md border-gray-300 bg-white py-2 px-3 text-base leading-6 text-gray-900 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\">\n                <option value=\"\">Select an existing address</option>\n                {existingAddresses.map((address) => (\n                  <option key={address.id} value={address.id}>{`${address.fullName}, ${address.streetAddress}, ${address.city}, ${address.state}, ${address.zip}, ${address.country}`}</option>\n                ))}\n              </select>\n            ) : (\n              <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                {['fullName', 'streetAddress', 'city', 'state', 'zip', 'country'].map((field) => (\n                  <input\n                    key={field}\n                    type=\"text\"\n                    name={field}\n                    placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\n                    value={formData[field]}\n                    onChange={handleInputChange}\n                    className=\"w-full rounded-md border border-gray-300 px-3 py-2 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500\"\n                  />\n                ))}\n              </div>\n            )}\n\n            <button\n              onClick={handlePayment}\n              disabled={!isFormValid || loading}\n              className={`mt-4 w-full rounded-md bg-indigo-600 px-4 py-2 text-white font-medium focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {loading ? 'Processing...' : 'Pay Now'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderSummary;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserCartService.js"],"sourcesContent":["\"use client\";\n\nimport { useSelector } from \"react-redux\";\nimport { axiosInstance } from \"../api/axios\";\n\nfunction UserCartService() {\n  const token = useSelector((state) => state.session.token);\n\n  const cartKey = 'shopflow';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n\n  this.loadCart = function() {\n    const storedCart = localStorage.getItem(cartKey);\n    return storedCart ? JSON.parse(storedCart) : [];\n  };\n\n  this.saveCart = function(cart) {\n    localStorage.setItem(cartKey, JSON.stringify(cart));\n  };\n\n  this.migrateCart = async function(userId) {\n    const guestCart = this.loadCart();\n\n    if (guestCart.length > 0) {\n      for (const item of guestCart) {\n        try {\n          await this.addItemToCart(userId, item.productId, item.quantity);\n        } catch (error) {\n          console.error('Error migrating cart item:', error);\n        }\n      }\n      this.clearCart();\n    }\n  };\n\n  this.addItemToCart = async function(userId, productId, quantity = 1) {\n    console.log(userId);\n    console.log(productId);\n    try {\n      const response = await axiosInstance.post(\n        // `/user/cart/addItemToCart?userId=${userId}&productId==${userId}4&quantity=${quantity}`, \n        `/user/cart/addItemToCart`,\n       {},\n        {\n          params:{\n            \n              userId,\n              productId,\n              quantity\n             \n          },\n          headers: getHeaders()\n        }\n      );\n      \n\n        return response.data;\n    \n    \n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.viewCart = async function(userId) {\n    try {\n      const response = await axiosInstance.get('/user/cart/viewCart', {\n        params: { userId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data.data || [];\n      } else {\n        throw new Error(response.data.message || 'Failed to retrieve cart');\n      }\n    } catch (error) {\n      console.error('Error viewing cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.deleteFromCart = async function(userId, productId) {\n    try {\n      const response = await axiosInstance.delete('/user/cart/deleteFromCart', {\n        params: { userId, productId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data.message || 'Failed to delete item from cart');\n      }\n    } catch (error) {\n      console.error('Error deleting item from cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.updateCartCount = async function(userId, productId, operation) {\n    try {\n      const response = await axiosInstance.put('/user/cart/cartCount', {}, {\n        params: { userId, productId, operation },\n        headers: getHeaders(),\n      });\n      console.log(response.status)\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data || 'Failed to update cart count');\n      }\n    } catch (error) {\n      console.error('Error updating cart count:', error);\n      throw error;\n    }\n  };\n\n  this.clearCart = function() {\n    localStorage.removeItem(cartKey);\n  };\n}\n\nexport default UserCartService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/_routeprotector/WithAuth.js"],"sourcesContent":["import { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst withAuth = (WrappedComponent) => {\n  return (props) => {\n    const router = useRouter();\n    const isLoggedIn = useSelector((state) => state.session.user);\n    const [loading, setLoading] = useState(true);  // Add a loading state\n\n    useEffect(() => {\n      if (isLoggedIn !== undefined) {\n        setLoading(false); \n      }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n      if (!loading && !isLoggedIn) {\n        router.push('/auth'); \n      }\n    }, [loading, isLoggedIn, router]);\n\n    if (loading) {\n      return <div>Loading.......</div>; \n    }\n\n    return isLoggedIn ? <WrappedComponent {...props} /> : null;\n  };\n};\n\nexport default withAuth;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,WAAW,CAAC;IAChB,OAAO,CAAC;QACN,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;QACvB,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI;QAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAQ,sBAAsB;QAErE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;YACR,IAAI,eAAe,WAAW;gBAC5B,WAAW;YACb;QACF,GAAG;YAAC;SAAW;QAEf,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;YACR,IAAI,CAAC,WAAW,CAAC,YAAY;gBAC3B,OAAO,IAAI,CAAC;YACd;QACF,GAAG;YAAC;YAAS;YAAY;SAAO;QAEhC,IAAI,SAAS;YACX,qBAAO,8OAAC;0BAAI;;;;;;QACd;QAEA,OAAO,2BAAa,8OAAC;YAAkB,GAAG,KAAK;;;;;mBAAO;IACxD;AACF;uCAEe"}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/page.js"],"sourcesContent":["\"use client\"\nimport React, { useEffect, useState } from 'react';\nimport OrderSummary from './Checkout';  \nimport UserCartService from '../service/UserCartService';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'next/navigation';\nimport withAuth from '../_routeprotector/WithAuth';\n\nconst fieldData = {\n  title: \"Order Summary\",\n  steps: [\n    { number: 1, label: \"Cart\", active: true, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 2, label: \"Shipping\", active: false, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 3, label: \"Payment\", active: false, href: \"#\", icon: null, iconPath: \"\" }\n  ],\n  shippingMethods: [\n    {\n      name: \"Standard Shipping\",\n      description: \"5-7 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: true\n    },\n    {\n      name: \"Express Shipping\",\n      description: \"2-3 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: false\n    }\n  ],\n  billingAddress: {\n    placeholder: \"Enter your address\",\n    flag: \"https://via.placeholder.com/20\",\n    states: [\"California\", \"Texas\", \"New York\"],\n    countries: [\"USA\", \"Canada\", \"UK\"]\n  }\n};\n\nfunction Page() {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userCartService = new UserCartService();\n  const userId = useSelector((state) => state.session.user?.id);\n  const searchParams = useSearchParams();\n  const orders = JSON.parse(searchParams.get('data'))||[];\n\n  const fetchProducts = async () => {\n    if (!userId) return;  \n    try {\n      const response = await userCartService.viewCart(userId);\n      console.log(response)\n      const productData = response; \n      setProducts(productData);\n      \n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (userId) {\n      fetchProducts();\n    }\n  }, [userId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <OrderSummary \n      title={fieldData.title} \n      steps={fieldData.steps} \n      data={products.items} \n      userId={userId}\n      orders={orders}\n      totalBill={products.totalAmount}\n      shippingMethods={fieldData.shippingMethods} \n      billingAddress={fieldData.billingAddress}\n    />\n  );\n}\nexport default withAuth(Page);"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AACA;AAFA;AAJA;;;;;;;;AAQA,MAAM,YAAY;IAChB,OAAO;IACP,OAAO;QACL;YAAE,QAAQ;YAAG,OAAO;YAAQ,QAAQ;YAAM,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QAC9E;YAAE,QAAQ;YAAG,OAAO;YAAY,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QACnF;YAAE,QAAQ;YAAG,OAAO;YAAW,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;KACnF;IACD,iBAAiB;QACf;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;QACA;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;KACD;IACD,gBAAgB;QACd,aAAa;QACb,MAAM;QACN,QAAQ;YAAC;YAAc;YAAS;SAAW;QAC3C,WAAW;YAAC;YAAO;YAAU;SAAK;IACpC;AACF;AAEA,SAAS;IACP,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,kBAAkB,IAAI,wIAAA,CAAA,UAAe;IAC3C,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI,EAAE;IAC1D,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,KAAK,KAAK,CAAC,aAAa,GAAG,CAAC,YAAU,EAAE;IAEvD,MAAM,gBAAgB;QACpB,IAAI,CAAC,QAAQ;QACb,IAAI;YACF,MAAM,WAAW,MAAM,gBAAgB,QAAQ,CAAC;YAChD,QAAQ,GAAG,CAAC;YACZ,MAAM,cAAc;YACpB,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,QAAQ;YACV;QACF;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC,kIAAA,CAAA,UAAY;QACX,OAAO,UAAU,KAAK;QACtB,OAAO,UAAU,KAAK;QACtB,MAAM,SAAS,KAAK;QACpB,QAAQ;QACR,QAAQ;QACR,WAAW,SAAS,WAAW;QAC/B,iBAAiB,UAAU,eAAe;QAC1C,gBAAgB,UAAU,cAAc;;;;;;AAG9C;uCACe,CAAA,GAAA,yIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}