{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/Checkout.js"],"sourcesContent":["const handlePayment = async () => {\n  if (!validateForm()) {\n    setError('Please fix the highlighted errors before proceeding.');\n    return;\n  }\n\n  setLoading(true);\n  setError(null);\n  try {\n    const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id || orders?.orders.id);\n    const options = {\n      key: 'rzp_test_nTbKdtgjeOQLhc',\n      amount: Math.ceil(totalBill * 100),\n      currency: razorpayOrder?.currency,\n      name: 'Your Shop',\n      description: 'Payment for your order',\n      order_id: razorpayOrder?.id,\n      handler: async function (response) {\n        const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n        const verificationResult = await verifyPaymentAndUpdateOrder(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n\n        if (verificationResult.success) {\n          router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(verificationResult?.order))}`);\n        } else {\n          await failedVerify(orders?.orders?.order?.id || orders?.orders.id);\n          setError('Payment verification failed. Please try again.');\n        }\n      },\n      prefill: {\n        name: formData.fullName,\n        email: 'customer@example.com',\n        contact: '1234567890',\n      },\n      theme: {\n        color: '#F37254',\n      },\n      modal: {\n        ondismiss: async () => {\n          await failedVerify(orders?.orders?.order?.id || orders?.orders.id);\n          setError('Payment was cancelled. Please try again.');\n        },\n      },\n    };\n\n    const rzp = new window.Razorpay(options);\n    rzp.open();\n  } catch (err) {\n    setError('Payment process failed. Please try again.');\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n// import React, { useState, useEffect } from 'react';\n// import { createOrder, failedVerify, verifyPayment } from '../service/PaymentService';  \n// import { checkOutOrder, getOrderById, verifyPaymentAndUpdateOrder } from '../service/OrderService';\n// import { useRouter } from 'next/navigation';\n\n// const OrderSummary = ({ \n//   title, \n//   steps, \n//   userId,\n//   orders,\n//   shippingMethods, \n//   billingAddress,\n//   totalBill,\n//   existingAddresses = [\n//     {\n//       id: '1',\n//       fullName: 'John Doe',\n//       streetAddress: '123 Main St',\n//       city: 'Los Angeles',\n//       state: 'California',\n//       zip: '90001',\n//       country: 'United States',\n//     },\n//     {\n//       id: '2',\n//       fullName: 'Jane Smith',\n//       streetAddress: '456 Elm St',\n//       city: 'San Francisco',\n//       state: 'California',\n//       zip: '94101',\n//       country: 'United States',\n//     },\n//     {\n//       id: '3',\n//       fullName: 'Alice Johnson',\n//       streetAddress: '789 Oak St',\n//       city: 'New York',\n//       state: 'New York',\n//       zip: '10001',\n//       country: 'United States',\n//     },\n//     {\n//       id: '4',\n//       fullName: 'Bob Brown',\n//       streetAddress: '321 Pine St',\n//       city: 'Chicago',\n//       state: 'Illinois',\n//       zip: '60601',\n//       country: 'United States',\n//     },\n//   ]\n// }) => {\n//   const router = useRouter();\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [orderData, setOrderData] = useState(orders?.orders?.order?.items || orders?.orders?.items);\n//   const [formData, setFormData] = useState({\n//     fullName: '',\n//     streetAddress: '',\n//     city: '',\n//     state: '',\n//     zip: '',\n//     country: '',\n//   });\n//   const [isFormValid, setIsFormValid] = useState(false);\n//   const [useExistingAddress, setUseExistingAddress] = useState(false);\n//   const [selectedAddress, setSelectedAddress] = useState(null);\n\n//   useEffect(() => {\n//     const script = document.createElement('script');\n//     script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n//     script.onload = () => {};\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script);\n//     };\n//   }, [userId]);\n\n//   const validateForm = () => {\n//     if (useExistingAddress && selectedAddress) {\n//       setIsFormValid(true);\n//     } else {\n//       const { fullName, streetAddress, city, state, zip, country } = formData;\n//       const isValid = fullName && streetAddress && city && state && zip && country;\n//       setIsFormValid(isValid);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevData) => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleAddressToggle = () => {\n//     setUseExistingAddress(!useExistingAddress);\n//     if (useExistingAddress) {\n//       setFormData({\n//         fullName: '',\n//         streetAddress: '',\n//         city: '',\n//         state: '',\n//         zip: '',\n//         country: '',\n//       });\n//     } else if (selectedAddress) {\n//       setFormData(selectedAddress);\n//       console.log(\"address\",selectedAddress);\n//     }\n//     validateForm(); \n//   };\n\n//   const handleAddressSelect = (e) => {\n//     const addressId = e.target.value;\n//     const address = existingAddresses.find(addr => addr.id === addressId);\n//     setSelectedAddress(address);\n//     setFormData(address);\n//     validateForm(); \n//   };\n\n//   const handleVerify = async (orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature) => {\n//     try {\n//       const response = await verifyPaymentAndUpdateOrder(orderId,razorpay_order_id, razorpay_payment_id, razorpay_signature);\n//       return response;\n//     } catch (err) {\n//       setError('Payment verification failed. Please try again.');\n//       console.error(JSON.stringify(err));\n//     }\n//   };\n\n//   const handlePayment = async () => {\n//     if (!isFormValid) {\n//       setError('Please fill all the required fields.');\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError(null);\n//     try {\n//       const { razorpayOrder, ...data } = await checkOutOrder(orders?.orders?.order?.id || orders?.orders.id);\n//       const options = {\n//         key: 'rzp_test_nTbKdtgjeOQLhc',\n//         amount: Math.ceil(totalBill * 100),\n//         currency: razorpayOrder?.currency,\n//         name: 'Your Shop',\n//         description: 'Payment for your order',\n//         order_id: razorpayOrder?.id,\n//         handler: async function (response) {\n//           const { razorpay_payment_id, razorpay_signature, razorpay_order_id } = response;\n//           const verificationResult = await handleVerify(orders?.orders?.order?.id || orders?.orders.id, razorpay_order_id, razorpay_payment_id, razorpay_signature);\n\n//           if (verificationResult.success) {\n//             router.push(`/orders/success?dtrcpt=${encodeURIComponent(JSON.stringify(verificationResult?.order))}`);\n//           } else {\n//             await failedVerify(orders?.orders?.order?.id || orders?.orders.id);\n//             setError('Payment verification failed. Please try again.');\n//           }\n//         },\n//         prefill: {\n//           name: formData.fullName,\n//           email: 'customer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: {\n//           color: '#F37254',\n//         },\n//       };\n\n//       const rzp = new window.Razorpay(options);\n//       rzp.open();\n      \n//     } catch (err) {\n//       setError('Payment process failed. Please try again.');\n//       console.error('Payment process failed:', err);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {error && <div className=\"bg-red-500 text-white p-4 rounded mb-4\">{error}</div>}\n//       <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n//         <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n//         <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n//           <div className=\"relative\">\n//             <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n//               {steps.map((step, index) => (\n//                 <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n//                   <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n//                     {step.icon ? (\n//                       <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n//                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n//                       </svg>\n//                     ) : step.number}\n//                   </a>\n//                   <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n//         <div className=\"px-4 pt-8\">\n//           <p className=\"text-xl font-medium\">Order Summary</p>\n//           <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n//           <div className=\"mt-8 space-y-2 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n//             {orderData?.map((orderItem, index) => (\n//               <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n//                 <img className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\" src={orderItem.product?.image || \"/_assets/image.png\"} alt={orderItem.product?.name || \"Product Image\"} />\n//                 <div className=\"flex w-full flex-col px-4 py-4\">\n//                   <span className=\"font-semibold\">{orderItem?.product.name || \"Product Name\"}</span>\n//                   <span className=\"float-right text-gray-400\">{orderItem.product?.description || \"No description available.\"}</span>\n//                   <span className=\"float-right text-gray-400\">{\"Quantity: \" + (orderItem.quantity || 1)}</span>\n//                   <p className=\"text-lg font-bold\">{\"$\" + (orderItem.product?.offerPrice || \"0.00\")}</p>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n          \n//           <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n//           <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n//           <form className=\"mt-5 grid gap-6\">\n//             {shippingMethods.map((method, index) => (\n//               <div key={index} className=\"relative\">\n//                 <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n//                 <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n//                 <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n//                   <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n//                   <div className=\"ml-5\">\n//                     <span className=\"mt-2 font-semibold\">{method.name}</span>\n//                     <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n//                   </div>\n//                 </label>\n//               </div>\n//             ))}\n//           </form>\n//         </div>\n\n//         {/* Billing Address */}\n//         <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n//           <p className=\"text-xl font-medium\">Address Details</p>\n//           <p className=\"text-gray-400\">Complete your order by providing your delivery address.</p>\n          \n//           {/* Toggle for existing address */}\n//           {existingAddresses?.length > 0 && (\n//             <div className=\"flex items-center mb-4\">\n//               <input \n//                 type=\"checkbox\" \n//                 id=\"useExistingAddress\" \n//                 checked={useExistingAddress} \n//                 onChange={handleAddressToggle} \n//                 className=\"mr-2\" \n//               />\n//               <label htmlFor=\"useExistingAddress\" className=\"text-sm\">Use existing address</label>\n//             </div>\n//           )}\n\n//           {/* Address selection */}\n//           {useExistingAddress && (\n//             <select \n//               onChange={handleAddressSelect} \n//               className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\"\n//             >\n//               <option value=\"\">Select an address</option>\n//               {existingAddresses.map((address) => (\n//                 <option key={address.id} value={address.id}>{`${address.fullName}, ${address.streetAddress}, ${address.city}, ${address.state}, ${address.zip}, ${address.country}`}</option>\n//               ))}\n//             </select>\n//           )}\n\n//           {/* Always show the form fields */}\n//           <div className=\"mt-4\">\n//             <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n//             <input type=\"text\" id=\"full-name\" name=\"fullName\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" value={formData.fullName} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//             <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n//             <input type=\"text\" id=\"street-address\" name=\"streetAddress\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" value={formData.streetAddress} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//             <label htmlFor=\"city\" className=\"mt-4 mb-2 block text-sm font-medium\">City</label>\n//             <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"Los Angeles\" value={formData.city} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//             <label htmlFor=\"state\" className=\"mt-4 mb-2 block text-sm font-medium\">State/Province</label>\n//             <input type=\"text\" id=\"state\" name=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"California\" value={formData.state} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//             <label htmlFor=\"zip\" className=\"mt-4 mb-2 block text-sm font-medium\">ZIP/Postal Code</label>\n//             <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"90001\" value={formData.zip} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//             <label htmlFor=\"country\" className=\"mt-4 mb-2 block text-sm font-medium\">Country</label>\n//             <input type=\"text\" id=\"country\" name=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"United States\" value={formData.country} onChange={handleInputChange} onBlur={validateForm} disabled={useExistingAddress} />\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Payment Button */}\n//       <div className=\"mt-10 text-center\">\n//         <button className={`w-3/4 rounded-lg ${loading ? 'bg-gray-500' : 'bg-gray-900'} p-4 text-sm font-medium text-white`} disabled={loading} onClick={handlePayment}>\n//           {loading ? 'Processing...' : 'Proceed to Payment'}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderSummary;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserCartService.js"],"sourcesContent":["\"use client\";\n\nimport { useSelector } from \"react-redux\";\nimport { axiosInstance } from \"../api/axios\";\n\nfunction UserCartService() {\n  const token = useSelector((state) => state.session.token);\n\n  const cartKey = 'shopflow';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n\n  this.loadCart = function() {\n    const storedCart = localStorage.getItem(cartKey);\n    return storedCart ? JSON.parse(storedCart) : [];\n  };\n\n  this.saveCart = function(cart) {\n    localStorage.setItem(cartKey, JSON.stringify(cart));\n  };\n\n  this.migrateCart = async function(userId) {\n    const guestCart = this.loadCart();\n    console.log(guestCart,userId);\n    if (guestCart.length > 0) {\n      for (const item of guestCart) {\n        try {\n          const res=await this.addItemToCart(userId, item.id, item.quantity);\n          console.log(\"migrated\",res)\n          \n        } catch (error) {\n          console.error('Error migrating cart item:', error);\n        }\n      }\n      this.clearCart();\n      \n    }\n  };\n\n  this.addItemToCart = async function(userId, productId, quantity = 1) {\n    console.log(userId);\n    console.log(productId);\n    try {\n      const response = await axiosInstance.post(\n        // `/user/cart/addItemToCart?userId=${userId}&productId==${userId}4&quantity=${quantity}`, \n        `/user/cart/addItemToCart`,\n       {},\n        {\n          params:{\n            \n              userId,\n              productId,\n              quantity\n             \n          },\n          headers: getHeaders()\n        }\n      );\n      \n\n        return response.data;\n    \n    \n    } catch (error) {\n      console.log(error)\n      console.error('Error adding item to cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.viewCart = async function(userId) {\n    try {\n      const response = await axiosInstance.get('/user/cart/viewCart', {\n        params: { userId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data.data || [];\n      } else {\n        throw new Error(response.data.message || 'Failed to retrieve cart');\n      }\n    } catch (error) {\n      console.error('Error viewing cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.deleteFromCart = async function(userId, productId) {\n    try {\n      const response = await axiosInstance.delete('/user/cart/deleteFromCart', {\n        params: { userId, productId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data.message || 'Failed to delete item from cart');\n      }\n    } catch (error) {\n      console.error('Error deleting item from cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.updateCartCount = async function(userId, productId, operation) {\n    try {\n      const response = await axiosInstance.put('/user/cart/cartCount', {}, {\n        params: { userId, productId, operation },\n        headers: getHeaders(),\n      });\n      console.log(response.status)\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data || 'Failed to update cart count');\n      }\n    } catch (error) {\n      console.error('Error updating cart count:', error);\n      throw error;\n    }\n  };\n\n  this.clearCart = function() {\n    localStorage.removeItem(cartKey);\n  };\n}\n\nexport default UserCartService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/_routeprotector/WithAuth.js"],"sourcesContent":["import { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst withAuth = (WrappedComponent) => {\n  return (props) => {\n    const router = useRouter();\n    const isLoggedIn = useSelector((state) => state.session.user);\n    const [loading, setLoading] = useState(true);  // Add a loading state\n\n    useEffect(() => {\n      if (isLoggedIn !== undefined) {\n        setLoading(false); \n      }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n      if (!loading && !isLoggedIn) {\n        router.push('/auth'); \n      }\n    }, [loading, isLoggedIn, router]);\n\n    if (loading) {\n      return <div>Loading.......</div>; \n    }\n\n    return isLoggedIn ? <WrappedComponent {...props} /> : null;\n  };\n};\n\nexport default withAuth;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,WAAW,CAAC;IAChB,OAAO,CAAC;QACN,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;QACvB,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI;QAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAQ,sBAAsB;QAErE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;YACR,IAAI,eAAe,WAAW;gBAC5B,WAAW;YACb;QACF,GAAG;YAAC;SAAW;QAEf,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;YACR,IAAI,CAAC,WAAW,CAAC,YAAY;gBAC3B,OAAO,IAAI,CAAC;YACd;QACF,GAAG;YAAC;YAAS;YAAY;SAAO;QAEhC,IAAI,SAAS;YACX,qBAAO,8OAAC;0BAAI;;;;;;QACd;QAEA,OAAO,2BAAa,8OAAC;YAAkB,GAAG,KAAK;;;;;mBAAO;IACxD;AACF;uCAEe"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/page.js"],"sourcesContent":["\"use client\"\nimport React, { useEffect, useState } from 'react';\nimport OrderSummary from './Checkout';  \nimport UserCartService from '../service/UserCartService';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'next/navigation';\nimport withAuth from '../_routeprotector/WithAuth';\n\nconst fieldData = {\n  title: \"Order Summary\",\n  steps: [\n    { number: 1, label: \"Cart\", active: true, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 2, label: \"Shipping\", active: false, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 3, label: \"Payment\", active: false, href: \"#\", icon: null, iconPath: \"\" }\n  ],\n  shippingMethods: [\n    {\n      name: \"Standard Shipping\",\n      description: \"5-7 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: true\n    },\n    {\n      name: \"Express Shipping\",\n      description: \"2-3 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: false\n    }\n  ],\n  billingAddress: {\n    placeholder: \"Enter your address\",\n    flag: \"https://via.placeholder.com/20\",\n    states: [\"California\", \"Texas\", \"New York\"],\n    countries: [\"USA\", \"Canada\", \"UK\"]\n  }\n};\n\nfunction Page() {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userCartService = new UserCartService();\n  const userId = useSelector((state) => state.session.user?.id);\n  const searchParams = useSearchParams();\n  const orders = useSelector(state=>state?.utils?.product?.orders);\nconsole.log(orders);\n  const fetchProducts = async () => {\n    if (!userId) return;  \n    try {\n      const response = await userCartService.viewCart(userId);\n      console.log(response)\n      const productData = response; \n      setProducts(productData);\n      \n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (userId) {\n      fetchProducts();\n    }\n  }, [userId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <OrderSummary \n      title={fieldData.title} \n      steps={fieldData.steps} \n      data={products.items} \n      userId={userId}\n      orders={orders}\n      totalBill={products.totalAmount}\n      shippingMethods={fieldData.shippingMethods} \n      billingAddress={fieldData.billingAddress}\n    />\n  );\n}\nexport default withAuth(Page);"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AACA;AAFA;AAJA;;;;;;;;AAQA,MAAM,YAAY;IAChB,OAAO;IACP,OAAO;QACL;YAAE,QAAQ;YAAG,OAAO;YAAQ,QAAQ;YAAM,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QAC9E;YAAE,QAAQ;YAAG,OAAO;YAAY,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QACnF;YAAE,QAAQ;YAAG,OAAO;YAAW,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;KACnF;IACD,iBAAiB;QACf;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;QACA;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;KACD;IACD,gBAAgB;QACd,aAAa;QACb,MAAM;QACN,QAAQ;YAAC;YAAc;YAAS;SAAW;QAC3C,WAAW;YAAC;YAAO;YAAU;SAAK;IACpC;AACF;AAEA,SAAS;IACP,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,kBAAkB,IAAI,wIAAA,CAAA,UAAe;IAC3C,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI,EAAE;IAC1D,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAA,QAAO,OAAO,OAAO,SAAS;IAC3D,QAAQ,GAAG,CAAC;IACV,MAAM,gBAAgB;QACpB,IAAI,CAAC,QAAQ;QACb,IAAI;YACF,MAAM,WAAW,MAAM,gBAAgB,QAAQ,CAAC;YAChD,QAAQ,GAAG,CAAC;YACZ,MAAM,cAAc;YACpB,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,QAAQ;YACV;QACF;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC,kIAAA,CAAA,UAAY;QACX,OAAO,UAAU,KAAK;QACtB,OAAO,UAAU,KAAK;QACtB,MAAM,SAAS,KAAK;QACpB,QAAQ;QACR,QAAQ;QACR,WAAW,SAAS,WAAW;QAC/B,iBAAiB,UAAU,eAAe;QAC1C,gBAAgB,UAAU,cAAc;;;;;;AAG9C;uCACe,CAAA,GAAA,yIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}