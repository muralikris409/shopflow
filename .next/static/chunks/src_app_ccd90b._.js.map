{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserService.js"],"sourcesContent":["import { axiosInstance as axios, axiosInstance } from \"../api/axios\";\n\nexport async function login(formdata) {\n    const { email, password } = formdata;\n  \n    try {\n        const response = await axios.post(\"user/login\", {\n            email: email,\n            password: password\n        });\n\n        const { token, data } = response.data;\n\n        localStorage.setItem(\"shopflow_session\", JSON.stringify({ user: data, token }));\n        return { data, token };\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || \"An error occurred during login.\");\n        } else if (error.request) {\n            throw new Error(\"Network error: No response received.\");\n        } else {\n            throw new Error(error.message || \"An unknown error occurred during login.\");\n        }\n    }\n}\n\nexport async function signUp(formdata) {\n    const { username: name, email, password } = formdata;\n\n    try {\n        const response = await axios.post(\"user/signup\", {\n            name,\n            email,\n            password\n        }, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || \"An error occurred during sign-up.\");\n        } else if (error.request) {\n            throw new Error(\"Network error: No response received.\");\n        } else {\n            throw new Error(error.message || \"An unknown error occurred during sign-up.\");\n        }\n    }\n}\n\nexport async function googleOAuth(data) {\n    try {\n        const response = await axios.post(\"user/oauth\", {\n            name: data.name,\n            email: data.email,\n            image: data.image,\n            id: data.id\n        });\n\n        const { token, data: user } = response.data;\n\n        localStorage.setItem(\"shopflow_session\", JSON.stringify({ user: user, token }));\n        return response.data;\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || \"An error occurred during Google OAuth.\");\n        } else if (error.request) {\n            throw new Error(\"Network error: No response received.\");\n        } else {\n            throw new Error(error.message || \"An unknown error occurred during Google OAuth.\");\n        }\n    }\n}\n\nexport async function forgotPassword(email) {\n  try {\n    const response = await axiosInstance.post(`user/forgotPassword?email=${email}`);\n    console.log(response)\n    if (response.status === 200) {\n      return {\n        ok: true,\n        data: response.data,\n      };\n    }\n    return {\n      ok: false,\n      message: response.data?.message || \"Something went wrong.\",\n    };\n  } catch (err) {\n    console.log(err)\n    throw err;\n  }\n}\nexport async function resetPassword(token,password){\n    try{\n    const response=await axiosInstance.post(`user/resetPassword?token=${token}&newPassword=${password}`);\n        return response;\n    console.log(response);\n   \n}\ncatch(err){\n    console.log(err);\n}\n}\nexport async function getProfileInfo(token,userId){\n    try{\n        console.log(\"test\")\n    const response=await axiosInstance.post(`user/userProfileInfo?userId=${userId}`,{},{\n        headers:{\n            Authorization:`Bearer ${token}`\n        }\n    });\n    console.log(response);\n        return response;\n    \n   \n}\ncatch(err){\n    console.log(err);\n}\n}\nexport async function updateProfileInfo(token,userId,data){\n    try{\n        console.log(\"test\")\n    const response=await axiosInstance.post(`user/updateUserProfile?userId=${userId}\n        &data=${data}`,{},{\n        headers:{\n            Authorization:`Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n\n        }\n    });\n    console.log(response);\n        return response;\n    \n   \n}\ncatch(err){\n    console.log(err);\n    \n}\n}\n\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEO,eAAe,MAAM,QAAQ;IAChC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,IAAI;QACA,MAAM,WAAW,MAAM,6HAAA,CAAA,gBAAK,CAAC,IAAI,CAAC,cAAc;YAC5C,OAAO;YACP,UAAU;QACd;QAEA,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI;QAErC,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;YAAE,MAAM;YAAM;QAAM;QAC5E,OAAO;YAAE;YAAM;QAAM;IACzB,EAAE,OAAO,OAAO;QACZ,IAAI,MAAM,QAAQ,EAAE;YAChB,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI;QACnD,OAAO,IAAI,MAAM,OAAO,EAAE;YACtB,MAAM,IAAI,MAAM;QACpB,OAAO;YACH,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;QACrC;IACJ;AACJ;AAEO,eAAe,OAAO,QAAQ;IACjC,MAAM,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5C,IAAI;QACA,MAAM,WAAW,MAAM,6HAAA,CAAA,gBAAK,CAAC,IAAI,CAAC,eAAe;YAC7C;YACA;YACA;QACJ,GAAG;YACC,SAAS;gBACL,gBAAgB;YACpB;QACJ;QAEA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,IAAI,MAAM,QAAQ,EAAE;YAChB,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI;QACnD,OAAO,IAAI,MAAM,OAAO,EAAE;YACtB,MAAM,IAAI,MAAM;QACpB,OAAO;YACH,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;QACrC;IACJ;AACJ;AAEO,eAAe,YAAY,IAAI;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,6HAAA,CAAA,gBAAK,CAAC,IAAI,CAAC,cAAc;YAC5C,MAAM,KAAK,IAAI;YACf,OAAO,KAAK,KAAK;YACjB,OAAO,KAAK,KAAK;YACjB,IAAI,KAAK,EAAE;QACf;QAEA,MAAM,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,GAAG,SAAS,IAAI;QAE3C,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;YAAE,MAAM;YAAM;QAAM;QAC5E,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,IAAI,MAAM,QAAQ,EAAE;YAChB,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI;QACnD,OAAO,IAAI,MAAM,OAAO,EAAE;YACtB,MAAM,IAAI,MAAM;QACpB,OAAO;YACH,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;QACrC;IACJ;AACJ;AAEO,eAAe,eAAe,KAAK;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,6HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,OAAO;QAC9E,QAAQ,GAAG,CAAC;QACZ,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;gBACL,IAAI;gBACJ,MAAM,SAAS,IAAI;YACrB;QACF;QACA,OAAO;YACL,IAAI;YACJ,SAAS,SAAS,IAAI,EAAE,WAAW;QACrC;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC;QACZ,MAAM;IACR;AACF;AACO,eAAe,cAAc,KAAK,EAAC,QAAQ;IAC9C,IAAG;QACH,MAAM,WAAS,MAAM,6HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,yBAAyB,EAAE,MAAM,aAAa,EAAE,UAAU;QAC/F,OAAO;;IAGf,EACA,OAAM,KAAI;QACN,QAAQ,GAAG,CAAC;IAChB;AACA;AACO,eAAe,eAAe,KAAK,EAAC,MAAM;IAC7C,IAAG;QACC,QAAQ,GAAG,CAAC;QAChB,MAAM,WAAS,MAAM,6HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,4BAA4B,EAAE,QAAQ,EAAC,CAAC,GAAE;YAC/E,SAAQ;gBACJ,eAAc,CAAC,OAAO,EAAE,OAAO;YACnC;QACJ;QACA,QAAQ,GAAG,CAAC;QACR,OAAO;IAGf,EACA,OAAM,KAAI;QACN,QAAQ,GAAG,CAAC;IAChB;AACA;AACO,eAAe,kBAAkB,KAAK,EAAC,MAAM,EAAC,IAAI;IACrD,IAAG;QACC,QAAQ,GAAG,CAAC;QAChB,MAAM,WAAS,MAAM,6HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,CAAC,8BAA8B,EAAE,OAAO;cACtE,EAAE,MAAM,EAAC,CAAC,GAAE;YAClB,SAAQ;gBACJ,eAAc,CAAC,OAAO,EAAE,OAAO;gBAC/B,gBAAgB;YAEpB;QACJ;QACA,QAAQ,GAAG,CAAC;QACR,OAAO;IAGf,EACA,OAAM,KAAI;QACN,QAAQ,GAAG,CAAC;IAEhB;AACA"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/user/forgetpwd/resetpwd/page.js"],"sourcesContent":["\"use client\";\nimport { resetPassword } from \"@/app/service/UserService\";\nimport { useSearchParams } from \"next/navigation\";\nimport React, { useState } from \"react\";\nimport { Suspense } from 'react';\n\nconst ResetPassword = () => {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <ResetPasswordComponent />\n    </Suspense>\n  );\n};\n\nexport default ResetPassword;\n\nconst ResetPasswordComponent = () => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const searchQuery = useSearchParams();\n  const token = searchQuery.get(\"token\");\n\n  const handleSubmit = async () => {\n    if (!password || !confirmPassword) {\n      setError(\"All fields are required.\");\n      setSuccess(\"\");\n    } else if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long.\");\n      setSuccess(\"\");\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      setSuccess(\"\");\n    } else {\n      setError(\"\");\n      try {\n        const response = await resetPassword(token, password);\n        if (response.status === 200) {\n          setSuccess(\"Your password has been reset successfully!\");\n          setError(\"\");\n        } else {\n          setError(response.message || \"An error occurred while resetting the password.\");\n          setSuccess(\"\");\n        }\n      } catch (err) {\n        setError(\"Failed to reset password. Please try again later.\");\n        setSuccess(\"\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto p-8 bg-white rounded-lg shadow-lg\">\n      <h2 className=\"text-3xl font-semibold text-gray-800 text-center\">Reset Password</h2>\n      <p className=\"text-sm text-gray-500 text-center mt-2\">\n        Please enter your new password below.\n      </p>\n      <div className=\"mt-6\">\n        <input\n          type=\"password\"\n          className={`w-full px-4 py-3 border ${\n            error ? \"border-red-500\" : \"border-gray-300\"\n          } rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-200`}\n          placeholder=\"New Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"mt-4\">\n        <input\n          type=\"password\"\n          className={`w-full px-4 py-3 border ${\n            error ? \"border-red-500\" : \"border-gray-300\"\n          } rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-200`}\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      </div>\n      {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n      {success && <p className=\"text-green-500 text-sm mt-2\">{success}</p>}\n      <button\n        onClick={handleSubmit}\n        className=\"w-full mt-6 bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors duration-200 shadow-md\"\n      >\n        Reset Password\n      </button>\n    </div>\n  );\n};"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;;AAMA,MAAM,gBAAgB;IACpB,qBACE,6LAAC,6JAAA,CAAA,WAAQ;QAAC,wBAAU,6LAAC;sBAAI;;;;;;kBACvB,cAAA,6LAAC;;;;;;;;;;AAGP;KANM;uCAQS;AAEf,MAAM,yBAAyB;;IAC7B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,cAAc,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IAClC,MAAM,QAAQ,YAAY,GAAG,CAAC;IAE9B,MAAM,eAAe;QACnB,IAAI,CAAC,YAAY,CAAC,iBAAiB;YACjC,SAAS;YACT,WAAW;QACb,OAAO,IAAI,SAAS,MAAM,GAAG,GAAG;YAC9B,SAAS;YACT,WAAW;QACb,OAAO,IAAI,aAAa,iBAAiB;YACvC,SAAS;YACT,WAAW;QACb,OAAO;YACL,SAAS;YACT,IAAI;gBACF,MAAM,WAAW,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE,OAAO;gBAC5C,IAAI,SAAS,MAAM,KAAK,KAAK;oBAC3B,WAAW;oBACX,SAAS;gBACX,OAAO;oBACL,SAAS,SAAS,OAAO,IAAI;oBAC7B,WAAW;gBACb;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS;gBACT,WAAW;YACb;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAmD;;;;;;0BACjE,6LAAC;gBAAE,WAAU;0BAAyC;;;;;;0BAGtD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,MAAK;oBACL,WAAW,CAAC,wBAAwB,EAClC,QAAQ,mBAAmB,kBAC5B,uFAAuF,CAAC;oBACzF,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0BAG/C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,MAAK;oBACL,WAAW,CAAC,wBAAwB,EAClC,QAAQ,mBAAmB,kBAC5B,uFAAuF,CAAC;oBACzF,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;YAGrD,uBAAS,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;YACnD,yBAAW,6LAAC;gBAAE,WAAU;0BAA+B;;;;;;0BACxD,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;GA1EM;;QAKgB,qIAAA,CAAA,kBAAe;;;MAL/B"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}