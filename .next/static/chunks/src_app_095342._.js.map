{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/Checkout.js"],"sourcesContent":["import React, { useState } from 'react';\nimport createOrder from '../services/paymentService';  // Assuming you already have this service\nimport verifyPayment from '../services/paymentService';  // Assuming you already have this service\n\nconst OrderSummary = ({ \n  title, \n  steps, \n  data, \n  shippingMethods, \n  billingAddress,\n  totalBill \n}) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handlePayment = async () => {\n    setLoading(true);\n    try {\n      const userId = 1; // Replace with actual user ID\n      const items = data.map(cartItem => ({\n        productId: cartItem.product.id,\n        quantity: cartItem.quantity,\n      }));\n      \n      // Step 1: Create the order\n      const { razorpayOrder, order } = await createOrder(userId, items);\n\n      // Step 2: Initialize Razorpay payment\n      const options = {\n        key: process.env.RAZORPAY_KEY_ID, // Replace with your Razorpay Key ID\n        amount: razorpayOrder.amount, // Amount in paise\n        currency: razorpayOrder.currency,\n        name: \"Your Shop\",\n        description: \"Payment for your order\",\n        order_id: razorpayOrder.id,\n        handler: async function (response) {\n          // Step 3: Verify the payment\n          const { payment_id, signature } = response;\n          const verificationResult = await verifyPayment(order.id, payment_id, signature);\n          \n          if (verificationResult.success) {\n            alert(\"Payment successful!\");\n            // Proceed with further actions like redirecting or showing order confirmation\n          } else {\n            alert(\"Payment verification failed.\");\n          }\n        },\n        prefill: {\n          name: \"Customer Name\", // Replace with actual user data\n          email: \"customer@example.com\",\n          contact: \"1234567890\",\n        },\n        theme: {\n          color: \"#F37254\",\n        },\n      };\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n      console.error(\"Payment process failed:\", err);\n    }\n  };\n\n  return (\n    <div>\n      {/* Order summary and steps layout */}\n      <div className=\"flex flex-col items-center border-b bg-white py-4 sm:flex-row sm:px-10 lg:px-20 xl:px-32\">\n        <a href=\"#\" className=\"text-2xl font-bold text-gray-800\">{title}</a>\n        <div className=\"mt-4 py-2 text-xs sm:mt-0 sm:ml-auto sm:text-base\">\n          <div className=\"relative\">\n            <ul className=\"relative flex w-full items-center justify-between space-x-2 sm:space-x-4\">\n              {steps.map((step, index) => (\n                <li key={index} className=\"flex items-center space-x-3 text-left sm:space-x-4\">\n                  <a className={`flex h-6 w-6 items-center justify-center rounded-full text-xs font-semibold ${step.active ? 'bg-emerald-200 text-emerald-700' : 'bg-gray-600 text-white'}`} href={step.href}>\n                    {step.icon ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={step.iconPath} />\n                      </svg>\n                    ) : step.number}\n                  </a>\n                  <span className={`font-semibold ${step.active ? 'text-gray-900' : 'text-gray-500'}`}>{step.label}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      {/* Order items and total */}\n      <div className=\"grid sm:px-10 lg:grid-cols-2 lg:px-20 xl:px-32 m-10\">\n        <div className=\"px-4 pt-8\">\n          <p className=\"text-xl font-medium\">Order Summary</p>\n          <p className=\"text-gray-400\">Check your items. And select a suitable shipping method.</p>\n          \n          {/* Cart items display */}\n          <div className=\"mt-8 space-y-3 max-h-96 overflow-y-scroll rounded-lg border bg-white px-2 py-4 sm:px-6\">\n            {data?.map((cartItem, index) => (\n              <div key={index} className=\"flex flex-col rounded-lg bg-white sm:flex-row\">\n                <img className=\"m-2 h-24 w-28 rounded-md border object-cover object-center\" src={cartItem.product?.image || \"/_assets/image.png\"} alt={cartItem.product.name} />\n                <div className=\"flex w-full flex-col px-4 py-4\">\n                  <span className=\"font-semibold\">{cartItem?.product.name}</span>\n                  <span className=\"float-right text-gray-400\">{cartItem?.product.description}</span>\n                  <span className=\"float-right text-gray-400\">{\"Quantity: \" + cartItem?.quantity}</span>\n                  <p className=\"text-lg font-bold\">{\"$\" + cartItem?.product.offerPrice}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <p className=\"text-lg p-2\">{\"Total Bill: $\" + totalBill}</p>\n\n          {/* Shipping Methods */}\n          <p className=\"mt-8 text-lg font-medium\">Shipping Methods</p>\n          <form className=\"mt-5 grid gap-6\">\n            {shippingMethods.map((method, index) => (\n              <div key={index} className=\"relative\">\n                <input className=\"peer hidden\" id={`radio_${index}`} type=\"radio\" name=\"radio\" defaultChecked={method.defaultChecked} />\n                <span className=\"peer-checked:border-gray-700 absolute right-4 top-1/2 box-content block h-3 w-3 -translate-y-1/2 rounded-full border-8 border-gray-300 bg-white\"></span>\n                <label className=\"peer-checked:border-2 peer-checked:border-gray-700 peer-checked:bg-gray-50 flex cursor-pointer select-none rounded-lg border border-gray-300 p-4\" htmlFor={`radio_${index}`}>\n                  <img className=\"w-14 object-contain\" src={method.image} alt={method.name} />\n                  <div className=\"ml-5\">\n                    <span className=\"mt-2 font-semibold\">{method.name}</span>\n                    <p className=\"text-slate-500 text-sm leading-6\">{method.description}</p>\n                  </div>\n                </label>\n              </div>\n            ))}\n          </form>\n        </div>\n\n        {/* Billing Address */}\n        <div className=\"mt-10 bg-gray-50 px-4 pt-8 lg:mt-0\">\n          <p className=\"text-xl font-medium\">Billing Address</p>\n          <p className=\"text-gray-400\">Complete your order by providing your billing address.</p>\n          {/* Billing Address Form */}\n          <div>\n            <label htmlFor=\"full-name\" className=\"mt-4 mb-2 block text-sm font-medium\">Full Name</label>\n            <input type=\"text\" id=\"full-name\" name=\"full-name\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"John Doe\" />\n            <label htmlFor=\"street-address\" className=\"mt-4 mb-2 block text-sm font-medium\">Street Address</label>\n            <input type=\"text\" id=\"street-address\" name=\"street-address\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"123 Main St\" />\n            <div className=\"flex mt-4\">\n              <div className=\"w-1/2 pr-2\">\n                <label htmlFor=\"city\" className=\"mb-2 block text-sm font-medium\">City</label>\n                <input type=\"text\" id=\"city\" name=\"city\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"City\" />\n              </div>\n              <div className=\"w-1/2 pl-2\">\n                <label htmlFor=\"state\" className=\"mb-2 block text-sm font-medium\">State</label>\n                <select name=\"state\" id=\"state\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n                  <option value=\"State\">Select State</option>\n                  {billingAddress.states.map((state, index) => (\n                    <option key={index} value={state}>{state}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"flex mt-4\">\n              <div className=\"w-1/2 pr-2\">\n                <label htmlFor=\"zip\" className=\"mb-2 block text-sm font-medium\">ZIP Code</label>\n                <input type=\"text\" id=\"zip\" name=\"zip\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\" placeholder=\"ZIP\" />\n              </div>\n              <div className=\"w-1/2 pl-2\">\n                <label htmlFor=\"country\" className=\"mb-2 block text-sm font-medium\">Country</label>\n                <select name=\"country\" id=\"country\" className=\"w-full rounded-md border border-gray-200 px-4 py-3 text-sm shadow-sm outline-none focus:z-10 focus:border-blue-500 focus:ring-blue-500\">\n                  <option value=\"Country\">Select Country</option>\n                  {billingAddress.countries.map((country, index) => (\n                    <option key={index} value={country}>{country}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={handlePayment}\n            className=\"w-full mt-8 text-left block bg-gray-900 text-white font-medium text-center py-2 px-3 rounded-lg hover:bg-gray-800\"\n          >\n            {loading ? \"Processing...\" : \"Place Order\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderSummary;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/service/UserCartService.js"],"sourcesContent":["\"use client\";\n\nimport { useSelector } from \"react-redux\";\nimport { axiosInstance } from \"../api/axios\";\n\nfunction UserCartService() {\n  const token = useSelector((state) => state.session.token);\n\n  const cartKey = 'shopflow';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json',\n  });\n\n  this.loadCart = function() {\n    const storedCart = localStorage.getItem(cartKey);\n    return storedCart ? JSON.parse(storedCart) : [];\n  };\n\n  this.saveCart = function(cart) {\n    localStorage.setItem(cartKey, JSON.stringify(cart));\n  };\n\n  this.migrateCart = async function(userId) {\n    const guestCart = this.loadCart();\n\n    if (guestCart.length > 0) {\n      for (const item of guestCart) {\n        try {\n          await this.addItemToCart(userId, item.productId, item.quantity);\n        } catch (error) {\n          console.error('Error migrating cart item:', error);\n        }\n      }\n      this.clearCart();\n    }\n  };\n\n  this.addItemToCart = async function(userId, productId, quantity = 1) {\n    console.log(userId);\n    console.log(productId);\n    try {\n      const response = await axiosInstance.post(\n        // `/user/cart/addItemToCart?userId=${userId}&productId==${userId}4&quantity=${quantity}`, \n        `/user/cart/addItemToCart`,\n       {},\n        {\n          params:{\n            \n              userId,\n              productId,\n              quantity\n             \n          },\n          headers: getHeaders()\n        }\n      );\n      \n\n        return response.data;\n    \n    \n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.viewCart = async function(userId) {\n    try {\n      const response = await axiosInstance.get('/user/cart/viewCart', {\n        params: { userId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data.data || [];\n      } else {\n        throw new Error(response.data.message || 'Failed to retrieve cart');\n      }\n    } catch (error) {\n      console.error('Error viewing cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.deleteFromCart = async function(userId, productId) {\n    try {\n      const response = await axiosInstance.delete('/user/cart/deleteFromCart', {\n        params: { userId, productId },\n        headers: getHeaders(),\n      });\n\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data.message || 'Failed to delete item from cart');\n      }\n    } catch (error) {\n      console.error('Error deleting item from cart:', error);\n      throw error.response ? error.response.data : new Error('Network or server error');\n    }\n  };\n\n  this.updateCartCount = async function(userId, productId, operation) {\n    try {\n      const response = await axiosInstance.put('/user/cart/cartCount', {}, {\n        params: { userId, productId, operation },\n        headers: getHeaders(),\n      });\n      console.log(response.status)\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data || 'Failed to update cart count');\n      }\n    } catch (error) {\n      console.error('Error updating cart count:', error);\n      throw error;\n    }\n  };\n\n  this.clearCart = function() {\n    localStorage.removeItem(cartKey);\n  };\n}\n\nexport default UserCartService;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/murali/Documents/Cloning%20task/shopflow/src/app/checkout/page.js"],"sourcesContent":["\"use client\"\nimport React, { useEffect, useState } from 'react';\nimport OrderSummary from './Checkout';  \nimport UserCartService from '../service/UserCartService';\nimport { useSelector } from 'react-redux';\n\nconst fieldData = {\n  title: \"Order Summary\",\n  steps: [\n    { number: 1, label: \"Cart\", active: true, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 2, label: \"Shipping\", active: false, href: \"#\", icon: null, iconPath: \"\" },\n    { number: 3, label: \"Payment\", active: false, href: \"#\", icon: null, iconPath: \"\" }\n  ],\n  shippingMethods: [\n    {\n      name: \"Standard Shipping\",\n      description: \"5-7 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: true\n    },\n    {\n      name: \"Express Shipping\",\n      description: \"2-3 business days\",\n      image: \"https://via.placeholder.com/50\",\n      defaultChecked: false\n    }\n  ],\n  billingAddress: {\n    placeholder: \"Enter your address\",\n    flag: \"https://via.placeholder.com/20\",\n    states: [\"California\", \"Texas\", \"New York\"],\n    countries: [\"USA\", \"Canada\", \"UK\"]\n  }\n};\n\nexport default function Page() {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userCartService = new UserCartService();\n  const userId = useSelector((state) => state.session.user?.id);\n  \n  const fetchProducts = async () => {\n    if (!userId) return;  \n    try {\n      const response = await userCartService.viewCart(userId);\n      console.log(response)\n      const productData = response; \n      setProducts(productData);\n      \n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (userId) {\n      fetchProducts();\n    }\n  }, [userId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <OrderSummary \n      title={fieldData.title} \n      steps={fieldData.steps} \n      data={products.items} \n      totalBill={products.totalAmount}\n      shippingMethods={fieldData.shippingMethods} \n      billingAddress={fieldData.billingAddress}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAMA,MAAM,YAAY;IAChB,OAAO;IACP,OAAO;QACL;YAAE,QAAQ;YAAG,OAAO;YAAQ,QAAQ;YAAM,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QAC9E;YAAE,QAAQ;YAAG,OAAO;YAAY,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;QACnF;YAAE,QAAQ;YAAG,OAAO;YAAW,QAAQ;YAAO,MAAM;YAAK,MAAM;YAAM,UAAU;QAAG;KACnF;IACD,iBAAiB;QACf;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;QACA;YACE,MAAM;YACN,aAAa;YACb,OAAO;YACP,gBAAgB;QAClB;KACD;IACD,gBAAgB;QACd,aAAa;QACb,MAAM;QACN,QAAQ;YAAC;YAAc;YAAS;SAAW;QAC3C,WAAW;YAAC;YAAO;YAAU;SAAK;IACpC;AACF;AAEe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,kBAAkB,IAAI,2IAAA,CAAA,UAAe;IAC3C,MAAM,SAAS,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;oCAAE,CAAC,QAAU,MAAM,OAAO,CAAC,IAAI,EAAE;;IAE1D,MAAM,gBAAgB;QACpB,IAAI,CAAC,QAAQ;QACb,IAAI;YACF,MAAM,WAAW,MAAM,gBAAgB,QAAQ,CAAC;YAChD,QAAQ,GAAG,CAAC;YACZ,MAAM,cAAc;YACpB,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,IAAI,QAAQ;gBACV;YACF;QACF;yBAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBACE,6LAAC,qIAAA,CAAA,UAAY;QACX,OAAO,UAAU,KAAK;QACtB,OAAO,UAAU,KAAK;QACtB,MAAM,SAAS,KAAK;QACpB,WAAW,SAAS,WAAW;QAC/B,iBAAiB,UAAU,eAAe;QAC1C,gBAAgB,UAAU,cAAc;;;;;;AAG9C;GAzCwB;;QAIP,4JAAA,CAAA,cAAW;;;KAJJ"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}